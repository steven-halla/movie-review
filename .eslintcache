[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx":"23","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx":"24"},{"size":1021,"mtime":1615861257836,"results":"25","hashOfConfig":"26"},{"size":3829,"mtime":1618273909818,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611854984062,"results":"28","hashOfConfig":"26"},{"size":3417,"mtime":1618271333670,"results":"29","hashOfConfig":"26"},{"size":103,"mtime":1613513089166,"results":"30","hashOfConfig":"26"},{"size":2108,"mtime":1619466221236,"results":"31","hashOfConfig":"26"},{"size":3452,"mtime":1619467887077,"results":"32","hashOfConfig":"26"},{"size":3790,"mtime":1619645230801,"results":"33","hashOfConfig":"26"},{"size":1425,"mtime":1619317188648,"results":"34","hashOfConfig":"26"},{"size":1618,"mtime":1619317233779,"results":"35","hashOfConfig":"26"},{"size":814,"mtime":1619056559449,"results":"36","hashOfConfig":"26"},{"size":578,"mtime":1618439441412,"results":"37","hashOfConfig":"26"},{"size":1394,"mtime":1619317128037,"results":"38","hashOfConfig":"26"},{"size":2952,"mtime":1619317563714,"results":"39","hashOfConfig":"26"},{"size":1237,"mtime":1618281864229,"results":"40","hashOfConfig":"26"},{"size":579,"mtime":1619466405435,"results":"41","hashOfConfig":"26"},{"size":1447,"mtime":1619477236478,"results":"42","hashOfConfig":"26"},{"size":141,"mtime":1619056559394,"results":"43","hashOfConfig":"26"},{"size":2326,"mtime":1619645206527,"results":"44","hashOfConfig":"26"},{"size":716,"mtime":1619314283053,"results":"45","hashOfConfig":"26"},{"size":5299,"mtime":1619651498302,"results":"46","hashOfConfig":"26"},{"size":5342,"mtime":1619651483082,"results":"47","hashOfConfig":"26"},{"size":696,"mtime":1619315028249,"results":"48","hashOfConfig":"26"},{"size":431,"mtime":1619321664113,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"p37r31",{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js",[],["110","111"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js",["112","113","114","115","116","117","118"],"import React, {useState, useEffect} from 'react';\nimport {Route, Router, Switch} from \"react-router\";\nimport {history} from './browserHistory';\nimport {SigninView} from './views/SigninView';\nimport {SignupView} from './views/SignupView';\nimport {HomeView} from \"./views/HomeView\";\nimport {CriticList} from './views/CriticList';\nimport {CriticView} from './views/CriticView';\nimport {MovieList} from './views/MovieList';\nimport {MovieView} from './views/MovieView';\nimport {CreateReview} from './views/CreateReview';\nimport {LoginStateHandler} from './views/LoginStateHandler';\n\n\n// change up home view\n\nimport './App.scss';\nimport {SignoutView} from \"./views/SignoutView\";\nimport {Header} from \"./views/Header\";\nimport {ProfileView} from \"./views/ProfileView\";\nimport {getCurrentUserAuth} from \"./services/getCurrentUserAuth\";\nimport {getUser} from \"./services/user.service\";\nimport {UserContextProvider} from \"./services/user.context\";\nimport {MovieContextProvider} from \"./services/movie.context\";\n\n\nexport const App = () => {\n    // DELETE\n    // Should I include email for this or make a seperate user for register?\n    const [user, setUser] = useState({\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const [users, setUsers] = useState([]);\n\n    const [movie, setMovie] = useState({\n        title: \"\",\n        rating: \"\",\n        writtenReview: \"\",\n    });\n\n    //i put this in so that our critic list will display data\n\n    const [movies, setMovies] = useState([]);\n\n    // set user state with current logged in user, if needed\n    useEffect(() => {\n        const userAuth = getCurrentUserAuth();\n        if (userAuth != null) {\n            getUser(userAuth.id).then(authedUser => {\n                // console.log(authedUser);\n                setUser(authedUser.data);\n            });\n        }\n    }, []);\n\n    return (\n        <UserContextProvider>\n            <MovieContextProvider>\n                <Router history={history}>\n                    <div className=\"App\">\n\n                        <LoginStateHandler history={history}/>\n\n                        <Header history={history}/>\n\n                        <Switch>\n                            <Route exact path=\"/signin\">\n                                <SigninView />\n                            </Route>\n\n                            <Route exact path=\"/signup\">\n                                <SignupView />\n                            </Route>\n\n                            <Route exact path=\"/signout\">\n                                <SignoutView />\n                            </Route>\n\n                            <Route exact path=\"/\">\n                                <HomeView />\n                            </Route>\n\n                            <Route exact path=\"/profile\">\n                                <ProfileView />\n                            </Route>\n\n                            <Route exact path=\"/movies\">\n                                <MovieList />\n                            </Route>\n\n                            <Route exact path=\"/movies/:id\">\n                                <MovieView  />\n                            </Route>\n\n                            <Route exact path=\"/movie/:id/review\">\n                                <CreateReview  />\n                            </Route>\n\n                            <Route exact path=\"/critics\">\n                                <CriticList />\n                            </Route>\n\n                            <Route exact path=\"/critics/:id\">\n                                <CriticView />\n                            </Route>\n\n\n                        </Switch>\n\n                        {/*<footer />*/}\n                    </div>\n                </Router>\n            </MovieContextProvider>\n        </UserContextProvider>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx",["119","120","121","122","123","124"],"import React, {useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {getUser} from \"../services/user.service\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const HomeView = () => {\n    const { setUser } = useContext(UserContext);;\n\n    useEffect(() => {\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n            return;\n        }\n\n        const currentUser = getCurrentUserAuth();\n        getUser(currentUser.id)\n            .then(response => {\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Home</h1>\n            </div>\n            <div>\n                <p>3 random movies here</p>\n                <p>Each movie will have a random review from our DB pop up</p>\n                <p>Each movie will have a review average based on the number of reviews it got</p>\n\n            </div>\n\n            <div>\n                <img className=\"movie-image\" src=\"https://deepfocusreview.com/wp-content/uploads/2016/12/aliens.jpg\"\n                     alt=\"\"/>\n                <p>This is where a random review is going to go!</p>\n                <p>This is where our review score will go based on the total amount of reviews. </p>\n                <p>I may include movies that have the most reviews pop up as well.</p>\n                <p>I could have multiple movie slots. One for most reviewed, one for best reviews and worst reviews\n                    as a couple of examples.</p>\n            </div>\n\n            <div>\n\n                <nav className=\"navbar navbar-light bg-info\">\n                    <h1>Like what you see? Connect with us on Social media!</h1>\n                    <p><a href=\"https://www.facebook.com/\" target=\"_blank\"><img\n                        src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/square-facebook-512.png\" height=\"60\"\n                        width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://twitter.com/\" target=\"_blank\"><img\n                        src=\"https://d1e2bohyu2u2w9.cloudfront.net/education/sites/default/files/product/twitter-product-image.png\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.linkedin.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRS4s3k1pIajgk3Rf-07CLW-WqbfKXE2VDXFA&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.pinterest.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEgxnwMTT4WrNoXdjQlJZE4Vxj1Gnd8v1OGg&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n\n                </nav>\n            </div>\n\n            <div>\n                <nav className=\"navbar navbar-light bg-secondary\">\n                    <div className=\"col-lg-12\">\n                        <h2>Contact us:</h2>\n\n                        <p>Phone: 777-8675-309</p>\n                        <p>Email: admin@tomrotten.com</p>\n                    </div>\n                </nav>\n            </div>\n\n\n        </div>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js",["125"],"import { createBrowserHistory, History } from 'history';\nexport const history = createBrowserHistory();","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx",["126"],"import React, {useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getAllMovies} from \"../services/movie.service\";\nimport {MovieContext} from \"../services/movie.context\";\nimport {ViewHeader} from \"./ViewHeader\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {Movie} from \"../model/Movie\";\n\nconst StyledMovieListDiv = styled.div`\n  // & means \"this\"\n  &.movie-list {\n    max-width: 800px;\n    margin: auto;\n\n    .movies {\n      .movie {\n        height: 200px;\n\n        .movie-paper {\n          height: 100%;\n\n          &:hover {\n            background-color: #eee;\n          }\n        }\n      }\n    }\n  }\n`;\n\n// ({ this is to return an object )}\n// this gets our movies list from an url and returns the data to the user\nexport const MovieList = () => {\n    const {movies, setMovies} = useContext(MovieContext);\n\n    useEffect(() => {\n        getAllMovies()\n            .then(response => {\n                // console.log(\"movies\")\n                // console.log(response.data);\n                setMovies(response.data);\n            })\n\n    }, []);\n    return (\n        <StyledMovieListDiv className=\"movie-list\">\n            <ViewHeader text={\"Movies\"}/>\n            <Grid container spacing={1} direction=\"row\" className=\"movies\">\n                {movies.map((movie, index) => (\n                    <MovieView key={index} movie={movie}/>\n                ))}\n            </Grid>\n        </StyledMovieListDiv>\n    );\n};\n//check postman lets change url to inlcude url\nconst MovieView = (props: { movie: Movie; }) => {\n    const {movie} = props;\n\n    return (\n        <Grid item xs={12} sm={6} md={3} className=\"movie\">\n            <Link to={`movies/${movie.id}`}>\n                <Paper elevation={3} className=\"movie-paper\">\n                    <div>\n                        <h2>{movie.title}</h2>\n                    </div>\n                </Paper>\n            </Link>\n        </Grid>\n    );\n}\n\n// once we get both tables connected, movie title should be turned into a link tag\n// have the rating appear to the right of the title\n\n",["127","128"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx",["129","130","131"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport {getMovie, getMovieReviews} from \"services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {MovieContext} from \"services/movie.context\";\nimport {Movie, MovieReview} from \"model/Movie\";\nimport {AxiosResponse} from \"axios\";\nimport styled from \"styled-components\";\nimport {Box, Button, Grid, Paper} from \"@material-ui/core\";\nimport {ViewHeader} from \"./ViewHeader\";\n\n// import './MovieReview.scss';\nconst MovieViewDiv = styled.div`\n  &.movie-view {\n    max-width: 800px;\n    margin: auto;\n\n    .average-rating {\n      font-size: 18px;\n      font-weight: bold;\n    }\n\n    .leave-review-button {\n      font-size: 18px;\n    }\n\n    .movie-reviews {\n      .movie-review {\n        &:hover {\n          background-color: #eee;\n        }\n      }\n    }\n  }\n`;\n\nexport const MovieView = () => {\n    const {movie, setMovie} = useContext(MovieContext);\n\n    // @ts-ignore\n    const {id} = useParams();\n    // const {userId} = useParams();\n\n    const [reviews, setReviews] = useState<MovieReview[]>([]);\n\n    useEffect(() => {\n        getMovie(id)\n            .then((response: AxiosResponse<Movie>) => {\n                console.log(response.data);\n                setMovie(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getMovieReviews(id)\n            .then((response: AxiosResponse<MovieReview[]>) => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    // this is an \"expensive\" computation, in future every time a user calls\n    // PATCH /movies/{id}/review, we wil update review count and average review for\n    // the movie so that the client doesn't have to calculate this\n    const ratingSum: number = reviews\n        .map((review: MovieReview) => review.rating) // map MovieReview[] to number[]\n        .reduce((rating1: number, rating2: number) => rating1 + rating2, 0);\n\n    // ternary operator, short-hand for 'if () {} else {}'\n    const averageRating = reviews.length > 0\n        ? (ratingSum / reviews.length)\n        : 0;\n\n    return (\n        <MovieViewDiv className=\"movie-view\">\n            <ViewHeader text={movie?.title}/>\n\n            <div className=\"average-rating\">\n                average rating: {averageRating} / 10\n            </div>\n            <Box m=\"10px\">\n                <Button\n                    className=\"leave-review-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    href={`/movie/${id}/review`}\n                >\n                    Leave Review\n                </Button>\n            </Box>\n\n            <Box className=\"movie-reviews\">\n                {reviews.map((review: MovieReview, i: number) => (\n                    <Paper key={i} className=\"movie-review\" elevation={3}>\n                        <Link to={`/critics/${review.user.id}`}>\n                            <strong>rating: {review.rating}</strong>\n                            <p>review: {review.writtenReview}</p>\n                            {review.user.displayName ? (\n                                <p>by {review.user.displayName}</p>\n                            ) : (\n                                <p>by: anonymous</p>\n                            )}\n                        </Link>\n                    </Paper>\n                ))}\n            </Box>\n        </MovieViewDiv>\n\n    );\n};","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx",["132","133","134"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts",["135"],"export const authHeader = () => {\n    // lets read the \"userAuth\" object from local storage.\n    // it contains basic information about the user, such as id, displayName, and accessToken\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n\n    if (userAuth && userAuth.accessToken) {\n        return {'authorization': userAuth.accessToken};\n    } else {\n        return {}\n    }\n}\n\n//local storage is so that data is still there when the page closes down\n//otherwise , if we did session storage the session would be lost upon a page closing down.\n\n// this helper function checks local storage for user item.\n\n// if a logged in user has an JWT, return HTTP authorization header.\n\n// otherwise return an empty object\n\n\n\n//*****************\n// why do we need line 6, where we have userAuth twice?","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx",["136"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const SignoutView: FC = () => {\n    const { setUser } = useContext(UserContext);\n\n    useEffect(() => {\n        // since <Header depends on user, calling setUser will cause the <Header> component to re-render.\n        setUser(undefined);\n        // this will clear localstorage\n        signout();\n        history.replace(\"/signin\");\n    }, []);\n\n    return <></>;\n}\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx",["137"],"import React, {useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\n\nexport const LoginStateHandler = (props: { history: any; }) => {\n    const {history} = props;\n\n    useEffect(() => {\n        if (history.location.pathname === '/signin') {\n            return;\n        }\n        if (history.location.pathname === '/signup') {\n            return;\n        }\n        if (history.location.pathname === '/signout') {\n            return;\n        }\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n        }\n\n    }, []);\n\n    return <></>;\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx",["138","139"],"import React, {FC, useContext} from 'react';\n\nimport {Link} from \"react-router-dom\";\nimport {UserContext} from \"../services/user.context\";\n\nimport styled from \"styled-components\";\nimport {Box, Typography, Grid, Paper} from \"@material-ui/core\";\n\nconst ProfileViewDiv = styled.div`\n    &.profile-user-view{\n      max-width: 800px;\n      margin: auto;\n    }\n  \n  .user-info {\n    color: red;\n  }\n  \n  .link {\n    margin: auto;\n    color: blue;\n    display: block;\n    width: 115px;\n    height: 25px;\n    background: #4E9CAF;\n    padding: 10px;\n    text-align: center;\n    border-radius: 5px;\n    color: white;\n    font-weight: bold;\n    line-height: 25px;\n  }\n`;\n\n\nexport const ProfileView: FC = () => {\n    // @ts-ignore\n    const { user: {displayName, email} } = useContext(UserContext);\n\n    return (\n        <ProfileViewDiv className=\"profile-user-view\">\n            <div>\n                <div className=\"loginbgcolor\">\n                    <h1>Profile</h1>\n                </div>\n                <Box className=\"user-info\">\n                    {/*user.email is just a temp thing will remove at the end */}\n                    <p>Name: {displayName}</p>\n                    <p>Email: {email}</p>\n                </Box>\n                <br/>\n                <Typography className=\"link\" variant=\"button\">\n                    <Link  to=\"/signout\">Sign Out</Link>\n                </Typography>\n            </div>\n        </ProfileViewDiv>\n\n    );\n};\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts",["140"],"export const getCurrentUserAuth = () =>  {\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n    return userAuth;\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["141","142"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx",["143","144","145","146","147","148","149","150","151","152","153"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx",["154","155","156"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":30,"column":12,"nodeType":"163","messageId":"164","endLine":30,"endColumn":16},{"ruleId":"161","severity":1,"message":"165","line":36,"column":12,"nodeType":"163","messageId":"164","endLine":36,"endColumn":17},{"ruleId":"161","severity":1,"message":"166","line":36,"column":19,"nodeType":"163","messageId":"164","endLine":36,"endColumn":27},{"ruleId":"161","severity":1,"message":"167","line":38,"column":12,"nodeType":"163","messageId":"164","endLine":38,"endColumn":17},{"ruleId":"161","severity":1,"message":"168","line":38,"column":19,"nodeType":"163","messageId":"164","endLine":38,"endColumn":27},{"ruleId":"161","severity":1,"message":"169","line":46,"column":12,"nodeType":"163","messageId":"164","endLine":46,"endColumn":18},{"ruleId":"161","severity":1,"message":"170","line":46,"column":20,"nodeType":"163","messageId":"164","endLine":46,"endColumn":29},{"ruleId":"161","severity":1,"message":"171","line":2,"column":9,"nodeType":"163","messageId":"164","endLine":2,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":23,"column":8,"nodeType":"174","endLine":23,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":51,"column":24,"nodeType":"178","endLine":51,"endColumn":76},{"ruleId":"176","severity":1,"message":"177","line":54,"column":24,"nodeType":"178","endLine":54,"endColumn":71},{"ruleId":"176","severity":1,"message":"177","line":57,"column":24,"nodeType":"178","endLine":57,"endColumn":76},{"ruleId":"176","severity":1,"message":"177","line":60,"column":24,"nodeType":"178","endLine":60,"endColumn":77},{"ruleId":"161","severity":1,"message":"179","line":1,"column":32,"nodeType":"163","messageId":"164","endLine":1,"endColumn":39},{"ruleId":"172","severity":1,"message":"180","line":45,"column":8,"nodeType":"174","endLine":45,"endColumn":10,"suggestions":"181"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"182","severity":1,"message":"183","line":9,"column":22,"nodeType":"163","messageId":"164","endLine":9,"endColumn":26},{"ruleId":"172","severity":1,"message":"184","line":52,"column":8,"nodeType":"174","endLine":52,"endColumn":10,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"186","line":60,"column":8,"nodeType":"174","endLine":60,"endColumn":10,"suggestions":"187"},{"ruleId":"172","severity":1,"message":"186","line":72,"column":8,"nodeType":"174","endLine":72,"endColumn":10,"suggestions":"188"},{"ruleId":"172","severity":1,"message":"184","line":81,"column":8,"nodeType":"174","endLine":81,"endColumn":10,"suggestions":"189"},{"ruleId":"172","severity":1,"message":"186","line":90,"column":8,"nodeType":"174","endLine":90,"endColumn":10,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":4,"column":33,"nodeType":"193","messageId":"194","endLine":4,"endColumn":73},{"ruleId":"172","severity":1,"message":"173","line":15,"column":8,"nodeType":"174","endLine":15,"endColumn":10,"suggestions":"195"},{"ruleId":"172","severity":1,"message":"196","line":21,"column":8,"nodeType":"174","endLine":21,"endColumn":10,"suggestions":"197"},{"ruleId":"182","severity":1,"message":"183","line":7,"column":26,"nodeType":"163","messageId":"164","endLine":7,"endColumn":30},{"ruleId":"182","severity":1,"message":"198","line":7,"column":32,"nodeType":"163","messageId":"164","endLine":7,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":2,"column":33,"nodeType":"193","messageId":"194","endLine":2,"endColumn":73},{"ruleId":"182","severity":1,"message":"199","line":7,"column":9,"nodeType":"163","messageId":"164","endLine":7,"endColumn":12},{"ruleId":"172","severity":1,"message":"200","line":44,"column":8,"nodeType":"174","endLine":44,"endColumn":10,"suggestions":"201"},{"ruleId":"182","severity":1,"message":"202","line":1,"column":26,"nodeType":"163","messageId":"164","endLine":1,"endColumn":32},{"ruleId":"182","severity":1,"message":"203","line":1,"column":34,"nodeType":"163","messageId":"164","endLine":1,"endColumn":44},{"ruleId":"182","severity":1,"message":"204","line":1,"column":50,"nodeType":"163","messageId":"164","endLine":1,"endColumn":60},{"ruleId":"182","severity":1,"message":"205","line":6,"column":9,"nodeType":"163","messageId":"164","endLine":6,"endColumn":20},{"ruleId":"182","severity":1,"message":"199","line":8,"column":9,"nodeType":"163","messageId":"164","endLine":8,"endColumn":12},{"ruleId":"182","severity":1,"message":"206","line":8,"column":14,"nodeType":"163","messageId":"164","endLine":8,"endColumn":19},{"ruleId":"182","severity":1,"message":"198","line":8,"column":21,"nodeType":"163","messageId":"164","endLine":8,"endColumn":26},{"ruleId":"182","severity":1,"message":"207","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":14},{"ruleId":"182","severity":1,"message":"208","line":11,"column":7,"nodeType":"163","messageId":"164","endLine":11,"endColumn":15},{"ruleId":"182","severity":1,"message":"209","line":21,"column":7,"nodeType":"163","messageId":"164","endLine":21,"endColumn":17},{"ruleId":"182","severity":1,"message":"210","line":32,"column":7,"nodeType":"163","messageId":"164","endLine":32,"endColumn":20},{"ruleId":"182","severity":1,"message":"211","line":1,"column":29,"nodeType":"163","messageId":"164","endLine":1,"endColumn":31},{"ruleId":"182","severity":1,"message":"206","line":5,"column":14,"nodeType":"163","messageId":"164","endLine":5,"endColumn":19},{"ruleId":"182","severity":1,"message":"198","line":5,"column":21,"nodeType":"163","messageId":"164","endLine":5,"endColumn":26},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'movie' is assigned a value but never used.","'setMovie' is assigned a value but never used.","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["214"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'History' is defined but never used.","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.",["215"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["217"],["218"],["219"],["220"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as",["221"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["222"],"'Paper' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["223"],"'useRef' is defined but never used.","'useContext' is defined but never used.","'MouseEvent' is defined but never used.","'UserContext' is defined but never used.","'Input' is defined but never used.","'styled' is defined but never used.","'required' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.","'FC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},{"desc":"228","fix":"233"},{"desc":"230","fix":"234"},{"desc":"224","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [setUser]",{"range":"240","text":"241"},"Update the dependencies array to be: [setMovies]",{"range":"242","text":"243"},"Update the dependencies array to be: [id, setMovie]",{"range":"244","text":"245"},"Update the dependencies array to be: [id]",{"range":"246","text":"247"},{"range":"248","text":"247"},{"range":"249","text":"245"},{"range":"250","text":"247"},{"range":"251","text":"241"},"Update the dependencies array to be: [history]",{"range":"252","text":"253"},"Update the dependencies array to be: [setUsers]",{"range":"254","text":"255"},[741,743],"[setUser]",[1121,1123],"[setMovies]",[1318,1320],"[id, setMovie]",[1548,1550],"[id]",[1757,1759],[1948,1950],[2175,2177],[551,553],[554,556],"[history]",[1131,1133],"[setUsers]"]