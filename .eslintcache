[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx":"23","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts":"24"},{"size":1025,"mtime":1619678374908,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611854984062,"results":"27","hashOfConfig":"26"},{"size":2066,"mtime":1619684150068,"results":"28","hashOfConfig":"26"},{"size":3479,"mtime":1619685461876,"results":"29","hashOfConfig":"26"},{"size":4764,"mtime":1622060018995,"results":"30","hashOfConfig":"26"},{"size":1425,"mtime":1619317188648,"results":"31","hashOfConfig":"26"},{"size":1618,"mtime":1619317233779,"results":"32","hashOfConfig":"26"},{"size":814,"mtime":1619056559449,"results":"33","hashOfConfig":"26"},{"size":747,"mtime":1619684799457,"results":"34","hashOfConfig":"26"},{"size":1579,"mtime":1622018782037,"results":"35","hashOfConfig":"26"},{"size":5013,"mtime":1622059746943,"results":"36","hashOfConfig":"26"},{"size":2985,"mtime":1619684524531,"results":"37","hashOfConfig":"26"},{"size":1411,"mtime":1619685070442,"results":"38","hashOfConfig":"26"},{"size":1295,"mtime":1622251281520,"results":"39","hashOfConfig":"26"},{"size":141,"mtime":1619056559394,"results":"40","hashOfConfig":"26"},{"size":3494,"mtime":1622251844849,"results":"41","hashOfConfig":"26"},{"size":716,"mtime":1619314283053,"results":"42","hashOfConfig":"26"},{"size":5824,"mtime":1620180180579,"results":"43","hashOfConfig":"26"},{"size":5868,"mtime":1620073734551,"results":"44","hashOfConfig":"26"},{"size":696,"mtime":1619315028249,"results":"45","hashOfConfig":"26"},{"size":431,"mtime":1619321664113,"results":"46","hashOfConfig":"26"},{"size":2979,"mtime":1619685368481,"results":"47","hashOfConfig":"26"},{"size":3328,"mtime":1619684066792,"results":"48","hashOfConfig":"26"},{"size":94,"mtime":1619683655731,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"p37r31",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx",[],["110","111"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx",["112","113"],"import React, {useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getAllMovies} from \"../services/movie.service\";\nimport {MovieContext} from \"../services/movie.context\";\nimport {ViewHeader} from \"./ViewHeader\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {Movie} from \"../model/Movie\";\n\nconst StyledMovieListDiv = styled.div`\n  // & means \"this\"\n  &.movie-list {\n    max-width: 800px;\n    margin: auto;\n\n    .movies {\n      .movie {\n        height: 200px;\n\n        .movie-paper {\n          height: 100%;\n\n          &:hover {\n            background-color: #eee;\n          }\n        }\n      }\n    }\n  }\n`;\n\n// ({ this is to return an object )}\n// this gets our movies list from an url and returns the data to the user\nexport const MovieList = () => {\n    const {movies, setMovies} = useContext(MovieContext);\n\n    useEffect(() => {\n        getAllMovies()\n            .then(response => {\n                // console.log(\"movies\")\n                // console.log(response.data);\n                setMovies(response.data);\n            })\n\n    }, []);\n    return (\n        <StyledMovieListDiv className=\"movie-list\">\n            <Grid container spacing={1} direction=\"row\" className=\"movies\">\n                {movies.map((movie, index) => (\n                    <MovieView key={index} movie={movie}/>\n                ))}\n            </Grid>\n        </StyledMovieListDiv>\n    );\n};\n//check postman lets change url to inlcude url\nconst MovieView = (props: { movie: Movie; }) => {\n    const {movie} = props;\n\n    return (\n        <Grid item xs={12} sm={6} md={3} className=\"movie\">\n            <Link to={`movies/${movie.id}`}>\n                <Paper elevation={3} className=\"movie-paper\">\n                    <div>\n                        <h2>{movie.title}</h2>\n                    </div>\n                </Paper>\n            </Link>\n        </Grid>\n    );\n}\n\n// once we get both tables connected, movie title should be turned into a link tag\n// have the rating appear to the right of the title\n\n",["114","115"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx",["116","117","118"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport {getMovie, getMovieReviews} from \"services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {MovieContext} from \"services/movie.context\";\nimport {Movie, MovieReview} from \"model/Movie\";\nimport {AxiosResponse} from \"axios\";\nimport styled from \"styled-components\";\nimport {Box, Button, Paper} from \"@material-ui/core\";\n\nconst MovieViewDiv = styled.div`\n  &.movie-view {\n    max-width: 800px;\n    margin: auto;\n\n    .average-rating {\n      font-size: 18px;\n      font-weight: bold;\n    }\n\n    .leave-review-button {\n      font-size: 18px;\n    }\n\n    .movie-reviews {\n      .movie-review {\n        &:hover {\n          background-color: #eee;\n        }\n      }\n    }\n  }\n`;\n\nexport const MovieView = () => {\n    const {movie, setMovie} = useContext(MovieContext);\n\n    // @ts-ignore\n    const {id} = useParams();\n    // const {userId} = useParams();\n\n    const [reviews, setReviews] = useState<MovieReview[]>([]);\n\n    useEffect(() => {\n        getMovie(id)\n            .then((response: AxiosResponse<Movie>) => {\n                console.log(response.data);\n                setMovie(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getMovieReviews(id)\n            .then((response: AxiosResponse<MovieReview[]>) => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    // this is an \"expensive\" computation, in future every time a user calls\n    // PATCH /movies/{id}/review, we wil update review count and average review for\n    // the movie so that the client doesn't have to calculate this\n    const ratingSum: number = reviews\n        .map((review: MovieReview) => review.rating) // map MovieReview[] to number[]\n        .reduce((rating1: number, rating2: number) => rating1 + rating2, 0);\n\n    // ternary operator, short-hand for 'if () {} else {}'\n    const averageRating = reviews.length > 0\n        ? (ratingSum / reviews.length)\n        : 0;\n\n    return (\n        <MovieViewDiv className=\"movie-view\">\n            <div className=\"average-rating\">\n                average rating: {averageRating} / 10\n            </div>\n            <Box m=\"10px\">\n                <Button\n                    className=\"leave-review-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    href={`/movies/${id}/review`}\n                >\n                    Leave Review\n                </Button>\n            </Box>\n\n            <Box className=\"movie-reviews\">\n                {reviews\n                    .sort((a: MovieReview, b: MovieReview) => {\n                        return b.id - a.id;\n                    })\n                    .map((review: MovieReview, i: number) => (\n                    <Paper key={i} className=\"movie-review\" elevation={3}>\n                        <Link to={`/critics/${review.user.id}`}>\n                            <strong>rating: {review.rating}</strong>\n                            <p>review: {review.writtenReview}</p>\n                            {review.user.displayName ? (\n                                <p>by {review.user.displayName}</p>\n                            ) : (\n                                <p>by: anonymous</p>\n                            )}\n                        </Link>\n                    </Paper>\n                ))}\n            </Box>\n        </MovieViewDiv>\n\n    );\n};","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx",["119","120","121","122","123","124","125","126","127","128"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts",["129"],"export const authHeader = () => {\n    // lets read the \"userAuth\" object from local storage.\n    // it contains basic information about the user, such as id, displayName, and accessToken\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n\n    if (userAuth && userAuth.accessToken) {\n        return {'authorization': userAuth.accessToken};\n    } else {\n        return {}\n    }\n}\n\n//local storage is so that data is still there when the page closes down\n//otherwise , if we did session storage the session would be lost upon a page closing down.\n\n// this helper function checks local storage for user item.\n\n// if a logged in user has an JWT, return HTTP authorization header.\n\n// otherwise return an empty object\n\n\n\n//*****************\n// why do we need line 6, where we have userAuth twice?","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx",["130","131"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessSignoutView: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        // since <Header depends on user, calling setUser will cause the <Header> component to re-render.\n        setUser(undefined);\n        // this will clear localstorage\n        signout();\n        history.replace(\"/signin\");\n    }, []);\n\n    return null;\n}\n\nexport const SignoutView = withRouter(RouterlessSignoutView);\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx",["132","133"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx",["134","135"],"import React, {FC, useContext} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {UserContext} from \"../services/user.context\";\nimport styled from \"styled-components\";\nimport {RouteComponentProps} from \"react-router\";\nimport clsx from \"clsx\";\n\n// This will create a header on every page including our login/reg page\n\n\nconst StyleHeaderDiv = styled.div`\n  &.top-header {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n\n    .links {\n      width: 100%;\n      height: 100%;\n      max-width: 800px;\n      background-color: #eee;\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: flex-end;\n      align-items: center;\n\n      .link {\n        margin: 10px;\n        height: 100%;\n        line-height: 50px; // set line-height = height of container (50px) and this will vertically center text.\n        &:hover {\n          border-bottom: 2px solid black;\n        }\n      }\n\n      .selected {\n        border-bottom: 2px solid black;\n      }\n    }\n\n    a,\n    a:visited,\n    a:hover {\n      text-decoration: none;\n      color: black;\n    }\n  }\n`;\n\nconst RouterlessHeader: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {user} = useContext(UserContext);\n\n    const pathname = history.location.pathname;\n\n    if (isLoggedIn() && user != null) {\n        return (\n            <StyleHeaderDiv className=\"top-header\">\n                <div className=\"links\">\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/critics') && 'selected')}\n                        to=\"/critics\"\n                    >\n                        Critics\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/movies') && 'selected')}\n                        to=\"/movies\"\n                    >\n                        Movies\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname === '/' && 'selected')}\n                        to=\"/\"\n                    >\n                        Home\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/profile') && 'selected')}\n                        to=\"/profile\"\n                    >\n                        {user.displayName || user.email || 'Profile'}\n                    </Link>\n                </div>\n            </StyleHeaderDiv>\n        );\n    }\n    return (\n        <StyleHeaderDiv className=\"top-header\">\n            <div className=\"links\">\n                <Link className={clsx(\"link\", pathname === '/signin' && 'selected')} to={\"/signin\"}>Sign In</Link>\n                <Link className={clsx(\"link\", pathname === '/signup' && 'selected')} to={\"/signup\"}>Sign Up</Link>\n            </div>\n        </StyleHeaderDiv>\n    )\n}\n\nexport const Header = withRouter(RouterlessHeader);\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx",["136","137","138"],"import React, {FC, useContext, useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {getUser} from \"../services/user.service\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessLoginStateHandler: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        if (history.location) {\n            if (history.location.pathname === '/signin') {\n                return;\n            }\n            if (history.location.pathname === '/signup') {\n                return;\n            }\n            if (history.location.pathname === '/signout') {\n                return;\n            }\n        }\n\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n        }\n\n    }, []);\n\n    // set user state with current logged in user, if needed\n    useEffect(() => {\n        const userAuth = getCurrentUserAuth();\n        if (userAuth != null) {\n            getUser(userAuth.id).then(authedUser => {\n                // console.log(authedUser);\n                setUser(authedUser.data);\n            });\n        }\n    }, []);\n\n    return null;\n}\n\nexport const LoginStateHandler = withRouter(RouterlessLoginStateHandler);","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx",["139","140"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts",["141"],"export const getCurrentUserAuth = () =>  {\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n    return userAuth;\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["142","143","144"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx",["145","146","147","148","149"],"import React, {useState, FC, ChangeEvent} from \"react\";\n// import {isEmail} from \"validator\";\nimport {signin} from \"../services/auth.service\";\nimport {SignInRequest} from \"../model/User\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nconst required = (value: any) => {\n    if (!value) {\n        return (\n            <div>\n                <p>This field is required </p>\n            </div>\n        );\n    }\n};\n\nconst validEmail = (email: string) => {\n    return true;\n    // if (!isEmail(email)) {\n    //     return (\n    //         <div>\n    //             <p>This is not a valid email</p>\n    //         </div>\n    //     );\n    // }\n};\n\nconst validPassword = (password: string) => {\n    if (password.length < 8 || password.length > 20) {\n        return (\n            <div>\n                <p>Password must be between 8 and 20 characters</p>\n            </div>\n        );\n    }\n};\n\n// interface Props {\n//     user: User;\n//     setUser: (user: User) => void;\n// }\n// export const SigninView = props => { // same as with ()\nexport const RouterlessSigninView: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const [signInRequest, setSignInRequest] = useState<SignInRequest>({} as SignInRequest);\n\n    const [loading, setLoading] = useState(false);\n\n    const [message, setMessage] = useState(\"\");\n\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n\n    const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\n        setSignInRequest({\n            ...signInRequest,\n            email: event.target.value\n        });\n\n        if (!event.target.value) {\n            setEmailError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setEmailError(\"Email must be 2 + characters\");\n\n        } else {\n            setEmailError(\"\");\n        }\n    };\n\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\n        setSignInRequest({\n            ...signInRequest,\n            password: event.target.value\n        });\n\n        if (!event.target.value) {\n            setPasswordError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setPasswordError(\"Password must be 2+ characters\");\n\n        } else {\n            setPasswordError(\"\");\n        }\n    };\n\n// should I put CreateUserRequest from user.ts?\n\n    const handleSignIn = () => {\n        setMessage(\"\");\n        setLoading(true);\n        // validate all something is up with this one\n        //form.current.validateAll();\n\n        // console.log(signInRequest);\n\n        signin(signInRequest).then(response => {\n            // check response for error;\n            history.push(\"/\");\n        }, (error: any) => {\n            const errorMessage = parseErrorMessageFromErrorResponse(error);\n\n            setLoading(false);\n            setMessage(errorMessage);\n        });\n    }\n\n    const parseErrorMessageFromErrorResponse = (error: any): string => {\n        return (error.response && error.response.data && error.response.data.message)\n            || error.message\n            || error.toString()\n    }\n\n    return (\n        <div>\n            <div className=\"loginbox\">\n                {/* migrate away from onSubmit and forms and just have a button down blow with and onClick={handleSignin}*/}\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\"> </label>\n                    {/*value={email} we took this out from inline input tag*/}\n                    <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" type=\"text\" name=\"email\"\n                               onChange={onChangeEmail} className=\"form-control\"\n                        // validations={[required, validEmail]}\n\n                    />\n                    {emailError && (\n                        <Alert severity=\"error\">\n                            <AlertTitle>{emailError} </AlertTitle>\n                        </Alert>\n                    )}\n\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\"> </label>\n                    <TextField id=\"outlined-basic\" label=\"password\" variant=\"outlined\" type=\"password\" name=\"password\"\n                               className=\"form-control\" onChange={onChangePassword}/>\n\n                    {passwordError && (\n                        <Alert severity=\"error\">\n                            <AlertTitle>{passwordError} </AlertTitle>\n                        </Alert>\n                    )}\n                </div>\n\n                <div className=\"form-group\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSignIn}\n                            className=\"btn btn-primary btn-block\" disabled={loading}>\n                        {loading && (\n                            <span className=\"spinner-border spinner-border-sm\"/>\n                        )}\n                        <span>Sign In</span>\n                    </Button>\n                </div>\n\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {message}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n};\n\nexport const SigninView = withRouter(RouterlessSigninView);\n\n\n//auth.services line 29 what type should signinrequest be?\n//signinview lines 146 and 156 both havea  signin button, which should i keep?\n//signinview unused parameters on handle signin line 92\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx",[],["150","151"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx",["152","153","154","155","156","157"],"import React, {useContext, useEffect} from 'react';\n\nimport {getUser} from \"../services/user.service\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {ViewHeader} from \"./ViewHeader\";\nimport {history} from \"../browserHistory\";\n\nexport const HomeView = () => {\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n            return;\n        }\n\n        const currentUser = getCurrentUserAuth();\n        getUser(currentUser.id)\n            .then(response => {\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            {/*<ViewHeader text=\"Home\" />*/}\n            <div>\n                <p>3 random movies here</p>\n                <p>Each movie will have a random review from our DB pop up</p>\n                <p>Each movie will have a review average based on the number of reviews it got</p>\n\n            </div>\n\n            <div>\n                <img className=\"movie-image\" src=\"https://deepfocusreview.com/wp-content/uploads/2016/12/aliens.jpg\"\n                     alt=\"\"/>\n                <p>This is where a random review is going to go!</p>\n                <p>This is where our review score will go based on the total amount of reviews. </p>\n                <p>I may include movies that have the most reviews pop up as well.</p>\n                <p>I could have multiple movie slots. One for most reviewed, one for best reviews and worst reviews\n                    as a couple of examples.</p>\n            </div>\n\n            <div>\n\n                <nav className=\"navbar navbar-light bg-info\">\n                    <h1>Like what you see? Connect with us on Social media!</h1>\n                    <p><a href=\"https://www.facebook.com/\" target=\"_blank\"><img\n                        src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/square-facebook-512.png\" height=\"60\"\n                        width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://twitter.com/\" target=\"_blank\"><img\n                        src=\"https://d1e2bohyu2u2w9.cloudfront.net/education/sites/default/files/product/twitter-product-image.png\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.linkedin.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRS4s3k1pIajgk3Rf-07CLW-WqbfKXE2VDXFA&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.pinterest.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEgxnwMTT4WrNoXdjQlJZE4Vxj1Gnd8v1OGg&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n\n                </nav>\n            </div>\n\n            <div>\n                <nav className=\"navbar navbar-light bg-secondary\">\n                    <div className=\"col-lg-12\">\n                        <h2>Contact us:</h2>\n\n                        <p>Phone: 777-8675-309</p>\n                        <p>Email: admin@tomrotten.com</p>\n                    </div>\n                </nav>\n            </div>\n\n\n        </div>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":5,"column":9,"nodeType":"164","messageId":"165","endLine":5,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":45,"column":8,"nodeType":"168","endLine":45,"endColumn":10,"suggestions":"169"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"170","line":36,"column":12,"nodeType":"164","messageId":"165","endLine":36,"endColumn":17},{"ruleId":"166","severity":1,"message":"171","line":50,"column":8,"nodeType":"168","endLine":50,"endColumn":10,"suggestions":"172"},{"ruleId":"166","severity":1,"message":"173","line":58,"column":8,"nodeType":"168","endLine":58,"endColumn":10,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"175","line":8,"column":9,"nodeType":"164","messageId":"165","endLine":8,"endColumn":26},{"ruleId":"162","severity":1,"message":"176","line":8,"column":28,"nodeType":"164","messageId":"165","endLine":8,"endColumn":40},{"ruleId":"162","severity":1,"message":"177","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":14},{"ruleId":"162","severity":1,"message":"178","line":10,"column":29,"nodeType":"164","messageId":"165","endLine":10,"endColumn":53},{"ruleId":"162","severity":1,"message":"179","line":11,"column":9,"nodeType":"164","messageId":"165","endLine":11,"endColumn":22},{"ruleId":"162","severity":1,"message":"170","line":58,"column":12,"nodeType":"164","messageId":"165","endLine":58,"endColumn":17},{"ruleId":"162","severity":1,"message":"180","line":68,"column":9,"nodeType":"164","messageId":"165","endLine":68,"endColumn":22},{"ruleId":"166","severity":1,"message":"173","line":106,"column":8,"nodeType":"168","endLine":106,"endColumn":10,"suggestions":"181"},{"ruleId":"166","severity":1,"message":"171","line":115,"column":8,"nodeType":"168","endLine":115,"endColumn":10,"suggestions":"182"},{"ruleId":"166","severity":1,"message":"173","line":126,"column":8,"nodeType":"168","endLine":126,"endColumn":10,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":4,"column":33,"nodeType":"186","messageId":"187","endLine":4,"endColumn":73},{"ruleId":"162","severity":1,"message":"188","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"189","line":17,"column":8,"nodeType":"168","endLine":17,"endColumn":10,"suggestions":"190"},{"ruleId":"162","severity":1,"message":"191","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":12},{"ruleId":"162","severity":1,"message":"192","line":10,"column":65,"nodeType":"164","messageId":"165","endLine":10,"endColumn":81},{"ruleId":"162","severity":1,"message":"193","line":3,"column":15,"nodeType":"164","messageId":"165","endLine":3,"endColumn":25},{"ruleId":"162","severity":1,"message":"194","line":6,"column":9,"nodeType":"164","messageId":"165","endLine":6,"endColumn":16},{"ruleId":"162","severity":1,"message":"188","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"195","line":30,"column":8,"nodeType":"168","endLine":30,"endColumn":10,"suggestions":"196"},{"ruleId":"166","severity":1,"message":"197","line":41,"column":8,"nodeType":"168","endLine":41,"endColumn":10,"suggestions":"198"},{"ruleId":"162","severity":1,"message":"199","line":7,"column":14,"nodeType":"164","messageId":"165","endLine":7,"endColumn":24},{"ruleId":"162","severity":1,"message":"200","line":7,"column":25,"nodeType":"164","messageId":"165","endLine":7,"endColumn":31},{"ruleId":"184","severity":1,"message":"185","line":2,"column":33,"nodeType":"186","messageId":"187","endLine":2,"endColumn":73},{"ruleId":"162","severity":1,"message":"201","line":7,"column":21,"nodeType":"164","messageId":"165","endLine":7,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":9,"column":9,"nodeType":"164","messageId":"165","endLine":9,"endColumn":19},{"ruleId":"166","severity":1,"message":"202","line":93,"column":8,"nodeType":"168","endLine":93,"endColumn":10,"suggestions":"203"},{"ruleId":"162","severity":1,"message":"204","line":8,"column":9,"nodeType":"164","messageId":"165","endLine":8,"endColumn":19},{"ruleId":"162","severity":1,"message":"205","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":16},{"ruleId":"162","severity":1,"message":"206","line":13,"column":7,"nodeType":"164","messageId":"165","endLine":13,"endColumn":15},{"ruleId":"162","severity":1,"message":"207","line":23,"column":7,"nodeType":"164","messageId":"165","endLine":23,"endColumn":17},{"ruleId":"162","severity":1,"message":"208","line":34,"column":7,"nodeType":"164","messageId":"165","endLine":34,"endColumn":20},{"ruleId":"158","replacedBy":"209"},{"ruleId":"160","replacedBy":"210"},{"ruleId":"162","severity":1,"message":"163","line":7,"column":9,"nodeType":"164","messageId":"165","endLine":7,"endColumn":19},{"ruleId":"166","severity":1,"message":"197","line":24,"column":8,"nodeType":"168","endLine":24,"endColumn":10,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":50,"column":24,"nodeType":"214","endLine":50,"endColumn":76},{"ruleId":"212","severity":1,"message":"213","line":53,"column":24,"nodeType":"214","endLine":53,"endColumn":71},{"ruleId":"212","severity":1,"message":"213","line":56,"column":24,"nodeType":"214","endLine":56,"endColumn":76},{"ruleId":"212","severity":1,"message":"213","line":59,"column":24,"nodeType":"214","endLine":59,"endColumn":77},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"@typescript-eslint/no-unused-vars","'ViewHeader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'movie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["219"],"'deleteMovieReview' is defined but never used.","'getAllMovies' is defined but never used.","'Movie' is defined but never used.","'MovieReviewUpdateRequest' is defined but never used.","'AxiosResponse' is defined but never used.","'movieReviewId' is assigned a value but never used.",["220"],["221"],["222"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.",["223"],"'Box' is defined but never used.","'TextareaAutosize' is defined but never used.","'useHistory' is defined but never used.","'history' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["225"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["226"],"'makeStyles' is defined but never used.","'Snackbar' is defined but never used.","'required' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.",["215"],["216"],["227"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"232","fix":"234"},{"desc":"230","fix":"235"},{"desc":"232","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"241","fix":"245"},"Update the dependencies array to be: [setMovies]",{"range":"246","text":"247"},"Update the dependencies array to be: [id, setMovie]",{"range":"248","text":"249"},"Update the dependencies array to be: [id]",{"range":"250","text":"251"},{"range":"252","text":"251"},{"range":"253","text":"249"},{"range":"254","text":"251"},"Update the dependencies array to be: [history, setUser]",{"range":"255","text":"256"},"Update the dependencies array to be: [history]",{"range":"257","text":"258"},"Update the dependencies array to be: [setUser]",{"range":"259","text":"260"},"Update the dependencies array to be: [setUsers]",{"range":"261","text":"262"},{"range":"263","text":"260"},[1121,1123],"[setMovies]",[1239,1241],"[id, setMovie]",[1469,1471],"[id]",[2674,2676],[2864,2866],[3093,3095],[659,661],"[history, setUser]",[971,973],"[history]",[1312,1314],"[setUser]",[2347,2349],"[setUsers]",[741,743]]