[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx":"23","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts":"24"},{"size":1015,"mtime":1622347755773,"results":"25","hashOfConfig":"26"},{"size":360,"mtime":1622347755294,"results":"27","hashOfConfig":"26"},{"size":1643,"mtime":1622347755591,"results":"28","hashOfConfig":"26"},{"size":2835,"mtime":1622347755798,"results":"29","hashOfConfig":"26"},{"size":3482,"mtime":1622347939455,"results":"30","hashOfConfig":"26"},{"size":997,"mtime":1622347755321,"results":"31","hashOfConfig":"26"},{"size":1260,"mtime":1622347755275,"results":"32","hashOfConfig":"26"},{"size":383,"mtime":1622347755201,"results":"33","hashOfConfig":"26"},{"size":579,"mtime":1622347755627,"results":"34","hashOfConfig":"26"},{"size":1502,"mtime":1622347755899,"results":"35","hashOfConfig":"26"},{"size":4436,"mtime":1622347755218,"results":"36","hashOfConfig":"26"},{"size":2561,"mtime":1622347755354,"results":"37","hashOfConfig":"26"},{"size":1213,"mtime":1622347755856,"results":"38","hashOfConfig":"26"},{"size":1202,"mtime":1622347755243,"results":"39","hashOfConfig":"26"},{"size":136,"mtime":1622347755830,"results":"40","hashOfConfig":"26"},{"size":2639,"mtime":1622347755254,"results":"41","hashOfConfig":"26"},{"size":610,"mtime":1622347755387,"results":"42","hashOfConfig":"26"},{"size":4374,"mtime":1622347756011,"results":"43","hashOfConfig":"26"},{"size":4972,"mtime":1622347755317,"results":"44","hashOfConfig":"26"},{"size":634,"mtime":1622347755878,"results":"45","hashOfConfig":"26"},{"size":431,"mtime":1619321664113,"results":"46","hashOfConfig":"26"},{"size":2285,"mtime":1622347755576,"results":"47","hashOfConfig":"26"},{"size":2176,"mtime":1622347755906,"results":"48","hashOfConfig":"26"},{"size":93,"mtime":1622347755233,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p37r31",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],["112","113"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx",["114"],"import React, {useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getAllMovies} from \"../services/movie.service\";\nimport {MovieContext} from \"../services/movie.context\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {Movie} from \"../model/Movie\";\n\nconst StyledMovieListDiv = styled.div`\n  // & means \"this\"\n  &.movie-list {\n    max-width: 800px;\n    margin: auto;\n\n    .movies {\n      .movie {\n        height: 200px;\n\n        .movie-paper {\n          height: 100%;\n\n          &:hover {\n            background-color: #eee;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const MovieList = () => {\n  const {movies, setMovies} = useContext(MovieContext);\n\n  useEffect(() => {\n    getAllMovies()\n      .then(response => {\n        // console.log(\"movies\")\n        // console.log(response.data);\n        setMovies(response.data);\n      })\n  }, []);\n  return (\n    <StyledMovieListDiv className=\"movie-list\">\n      <Grid container spacing={1}\n            direction=\"row\"\n            className=\"movies\">\n        {movies.map((movie, index) => (\n          <MovieView key={index} movie={movie}/>\n        ))}\n      </Grid>\n    </StyledMovieListDiv>\n  );\n};\n//check postman lets change url to inlcude url\nconst MovieView = (props: { movie: Movie; }) => {\n  const {movie} = props;\n\n  return (\n    <Grid item xs={12} sm={6} md={3}\n          className=\"movie\">\n      <Link to={`movies/${movie.id}`}>\n        <Paper elevation={3} className=\"movie-paper\">\n          <div>\n            <h2>{movie.title}</h2>\n          </div>\n        </Paper>\n      </Link>\n    </Grid>\n  );\n}\n\n\n\n",["115","116"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx",["117","118","119"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport {getMovie, getMovieReviews} from \"services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {MovieContext} from \"services/movie.context\";\nimport {Movie, MovieReview} from \"model/Movie\";\nimport {AxiosResponse} from \"axios\";\nimport styled from \"styled-components\";\nimport {Box, Button, Paper} from \"@material-ui/core\";\n\nconst MovieViewDiv = styled.div`\n  &.movie-view {\n    max-width: 800px;\n    margin: auto;\n\n    .average-rating {\n      font-size: 18px;\n      font-weight: bold;\n    }\n\n    .leave-review-button {\n      font-size: 18px;\n    }\n\n    .movie-reviews {\n      .movie-review {\n        &:hover {\n          background-color: #eee;\n        }\n      }\n    }\n  }\n`;\n\nexport const MovieView = () => {\n  const {movie, setMovie} = useContext(MovieContext);\n\n  // @ts-ignore\n  const {id} = useParams();\n  // const {userId} = useParams();\n\n  const [reviews, setReviews] = useState<MovieReview[]>([]);\n\n  useEffect(() => {\n    getMovie(id)\n      .then((response: AxiosResponse<Movie>) => {\n        console.log(response.data);\n        setMovie(response.data);\n      });\n  }, []);\n\n  useEffect(() => {\n    getMovieReviews(id)\n      .then((response: AxiosResponse<MovieReview[]>) => {\n        console.log(response.data);\n        setReviews(response.data);\n      });\n  }, []);\n\n  const ratingSum: number = reviews\n    .map((review: MovieReview) => review.rating) // map MovieReview[] to number[]\n    .reduce((rating1: number, rating2: number) => rating1 + rating2, 0);\n\n  // ternary operator, short-hand for 'if () {} else {}'\n  const averageRating = reviews.length > 0\n    ? (ratingSum / reviews.length)\n    : 0;\n\n  return (\n    <MovieViewDiv className=\"movie-view\">\n      <div className=\"average-rating\">\n        average rating: {averageRating} / 10\n      </div>\n      <Box m=\"10px\">\n        <Button\n          className=\"leave-review-button\"\n          variant=\"contained\"\n          color=\"primary\"\n          href={`/movies/${id}/review`}\n        >\n          Leave Review\n        </Button>\n      </Box>\n      <Box className=\"movie-reviews\">\n        {reviews\n          .sort((a: MovieReview, b: MovieReview) => {\n            return b.id - a.id;\n          })\n          .map((review: MovieReview, i: number) => (\n            <Paper key={i} className=\"movie-review\" elevation={3}>\n              <Link to={`/critics/${review.user.id}`}>\n                <strong>rating: {review.rating}</strong>\n                <p>review: {review.writtenReview}</p>\n                {review.user.displayName ? (\n                  <p>by {review.user.displayName}</p>\n                ) : (\n                  <p>by: anonymous</p>\n                )}\n              </Link>\n            </Paper>\n          ))}\n      </Box>\n    </MovieViewDiv>\n  );\n};","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx",["120","121"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts",["122"],"export const authHeader = () => {\n  // lets read the \"userAuth\" object from local storage.\n  // it contains basic information about the user, such as id, displayName, and accessToken\n  const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n\n  if (userAuth && userAuth.accessToken) {\n    return {'authorization': userAuth.accessToken};\n  } else {\n    return {}\n  }\n}\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx",["123","124"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessSignoutView: FC<RouteComponentProps> = (props) => {\n  const {history} = props;\n  const {setUser} = useContext(UserContext);\n\n  useEffect(() => {\n    setUser(undefined);\n    signout();\n    history.replace(\"/signin\");\n  }, []);\n\n  return null;\n}\n\nexport const SignoutView = withRouter(RouterlessSignoutView);\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx",["125","126"],"import React, {FC, useContext, useState} from 'react';\nimport {RouteComponentProps, useParams} from \"react-router\";\nimport {updateMovieReview} from \"services/movie.service\";\nimport {UserContext} from \"services/user.context\";\nimport {withRouter} from \"react-router-dom\";\nimport {MovieReviewUpdateRequest} from \"model/Movie\";\nimport {User} from 'model/User';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport styled from \"styled-components\";\nimport {Button, FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\n\n\nconst CreateReviewDiv = styled.div`\n  &.create-review {\n    display: flex;\n    flex-flow: column nowrap;;\n    justify-content: center;\n    align-items: center;\n\n    .title-row {\n      display: flex;\n      flex-flow: row nowrap;;\n      justify-content: center;\n      align-items: center;\n      margin: 10px;\n\n      .chat-box-icon {\n        margin: 2px;\n      }\n\n      .title-text {\n        margin: 2px;\n        font-size: 18px;\n      }\n    }\n\n    // a general css rule to add margin around all form-controls\n    .MuiFormControl-root {\n      margin: 5px;\n    }\n\n    // css specific to rating select input\n    .rating-form-control {\n      min-width: 120px;\n      margin: 2px;\n    }\n\n    // css specific to review text input\n    .review-form-control {\n      .MuiFormControl-root {\n        width: 400px;\n      }\n    }\n  }\n`;\n\ninterface CreateReviewParams {\n  id: string;\n}\n\nconst RouterlessCreateReview: FC<RouteComponentProps> = (props) => {\n  const {history} = props;\n  const {user} = useContext(UserContext);\n  const [rating, setRating] = useState<number>();\n\n  const [writtenReview, setWrittenReview] = useState(\"\");\n\n  const {id: movieIdString} = useParams<CreateReviewParams>(); // rename url id to movie id\n  const movieId = Number(movieIdString);\n\n\n  const onSubmit = () => {\n    if (!user) {\n      alert(\"no user logged in\");\n      return\n    }\n\n    const currentUser: User = user!;\n\n    // check to force user to select a rating\n    if (!rating) {\n      alert(\"Please select a rating\");\n      return;\n    }\n    // if no user is logged in\n    if (!currentUser.id) {\n      alert(\"Please login, user id is null\");\n      return;\n    }\n\n    // pass in review next to rating\n    const request: MovieReviewUpdateRequest = {\n      userId: currentUser.id,\n      movieId: movieId,\n      rating: rating,\n      writtenReview: writtenReview\n    };\n\n    updateMovieReview(request).then(newReview => {\n      console.log(\"created movie review:\")\n      console.log(newReview);\n      history.push(`/movies/${movieId}`);\n    });\n  };\n\n  return (\n    <CreateReviewDiv className=\"create-review\">\n      <div className=\"title-row\">\n        <ChatIcon className=\"chat-box-icon\"/>\n        <div className=\"title-text\">Your rating of this movie</div>\n      </div>\n\n      <FormControl variant=\"outlined\"\n                   className=\"rating-form-control\">\n        <InputLabel htmlFor=\"rating-input\">Rating</InputLabel>\n        <Select\n          key=\"Rating\"\n          id=\"rating-input\"\n          value={rating}\n          onChange={(event) => setRating(Number(event.target.value))}\n          label=\"Rating\"\n        >\n          <MenuItem value=\"\">Select Rating (1 low - 10 high)</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={9}>9</MenuItem>\n          <MenuItem value={8}>8</MenuItem>\n          <MenuItem value={7}>7</MenuItem>\n          <MenuItem value={6}>6</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={4}>4</MenuItem>\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={2}>2</MenuItem>\n          <MenuItem value={1}>1</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"outlined\"\n                   className=\"review-form-control\">\n        <TextField\n          id=\"review-label\"\n          label=\"Review\"\n          name=\"review\"\n          multiline={true}\n          onChange={(event) => setWrittenReview(event.target.value)}\n          value={writtenReview}\n          variant=\"outlined\"\n        />\n      </FormControl>\n\n      <FormControl className=\"review-submit-button\">\n        <Button\n          name=\"rating\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onSubmit}\n          disabled={rating == null}\n        >\n          Leave Review\n        </Button>\n      </FormControl>\n    </CreateReviewDiv>\n  );\n};\n\nexport const CreateReview = withRouter(RouterlessCreateReview);","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx",["127","128","129"],"import React, {FC, useContext, useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {getUser} from \"../services/user.service\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessLoginStateHandler: FC<RouteComponentProps> = (props) => {\n  const {history} = props;\n  const {setUser} = useContext(UserContext);\n\n  useEffect(() => {\n    if (history.location) {\n      if (history.location.pathname === '/signin') {\n        return;\n      }\n      if (history.location.pathname === '/signup') {\n        return;\n      }\n      if (history.location.pathname === '/signout') {\n        return;\n      }\n    }\n\n    if (!isLoggedIn()) {\n      history.replace(\"/signin\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const userAuth = getCurrentUserAuth();\n    if (userAuth != null) {\n      getUser(userAuth.id).then(authedUser => {\n        // console.log(authedUser);\n        setUser(authedUser.data);\n      });\n    }\n  }, []);\n\n  return null;\n}\n\nexport const LoginStateHandler = withRouter(RouterlessLoginStateHandler);","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx",["130","131"],"import React, {FC, useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {UserContext} from \"../services/user.context\";\nimport styled from \"styled-components\";\nimport {Box} from \"@material-ui/core\";\n\nconst ProfileViewDiv = styled.div`\n  &.profile-user-view {\n    max-width: 800px;\n    margin: auto;\n  }\n\n  .user-info {\n    color: black;\n    font-size: large;\n  }\n\n  //\n  //.link {\n  //  margin: auto;\n  //  display: block;\n  //  width: 115px;\n  //  height: 25px;\n  //  background: #4E9CAF;\n  //  padding: 10px;\n  //  text-align: center;\n  //  border-radius: 1px;\n  //  color: white;\n  //  font-weight: bold;\n  //  line-height: 25px;\n  //}\n\n  .link {\n    color: red;\n    text-decoration: red;\n\n    &:hover {\n      font-size: x-large;\n    }\n  }\n`;\n\nexport const ProfileView: FC = () => {\n  const {user} = useContext(UserContext);\n\n  return (\n    <ProfileViewDiv className=\"profile-user-view\">\n      <Box className=\"user-info\" mb=\"15px\">\n        {/*user.email is just a temp thing will remove at the end */}\n        <p>Name: {user?.displayName}</p>\n        <p>Email: {user?.email}</p>\n      </Box>\n      <Link className=\"link\" to=\"/signout\">Sign Out</Link>\n    </ProfileViewDiv>\n  );\n};\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts",["132"],"export const getCurrentUserAuth = () =>  {\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n    return userAuth;\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["133","134"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getUsers} from \"../services/user.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {AxiosResponse} from \"axios\";\nimport {User} from \"../model/User\";\nimport {Box, Grid, Paper} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst CriticListDiv = styled.div`\n  &.critic-view {\n    max-width: 800px;\n    margin: auto;\n    //background-color: #eeeeee;\n    //  background-color: chocolate;\n    display: inline-flex;\n    //flex-direction: row;\n    flex-flow: row;\n    margin: auto;\n    min-width: 220px;\n  }\n\n  //.critic-list {\n  //  margin: 10px;\n  //    //flex-flow: row;\n  //    flex-direction: row;\n  //\n  //}\n  //\n  //ul li {\n  //  margin: auto;\n  //  list-style-type: none;\n  //  color: red;\n  //  margin-right: 37px;\n  //}\n  .critics-list {\n    //background-color: blue;\n    margin: 5px;\n    min-width: 255px;\n    //background-color: red;\n\n\n    .critic-paper {\n      margin: auto;\n      margin: 5px;\n      align-items: center;\n\n      min-width: 240px;\n      min-height: 100px;\n      display: flex;\n      //border-color: #282c34;\n      //background-color: blue;\n\n      &:hover {\n        background-color: ghostwhite;\n\n      }\n\n      .item-box {\n        display: flex;\n        //align-content: flex-start;\n        align-items: center;\n        //margin-left: auto;\n        //flex-direction: column;\n        flex-flow: column;\n        align-items: center;\n        margin-left: 70px;\n        min-height: 122px;\n      }\n    }\n  }\n\n`;\n\nexport const CriticList: FC = () => {\n  const {users, setUsers} = useContext(UserContext);\n\n  useEffect(() => {\n    getUsers()\n      .then((response: AxiosResponse<User[]>) => {\n        setUsers(response.data);\n      });\n\n  }, []);\n\n  return (\n    <CriticListDiv className=\"critic-view\">\n      <div>\n        {users.map((user, index) => (\n          <CriticUser key={index} user={user}/>\n        ))}\n      </div>\n    </CriticListDiv>\n  );\n};\n\ninterface CriticUserProps {\n  user: User;\n}\n\nconst CriticUser: FC<CriticUserProps> = (props) => {\n  const {user} = props;\n  return (\n    <CriticListDiv className=\"critic-view\">\n\n      <Link to={`/critics/${user.id}`}>\n        <Grid container spacing={1} className=\"critics-list\">\n          <Paper elevation={3} className=\"critic-paper\">\n            <section className=\"item-section\">\n              <Box className=\"item-box\">\n\n                <p>{user.displayName}</p>\n\n                <p>View Profile</p>\n              </Box>\n            </section>\n          </Paper>\n        </Grid>\n      </Link>\n    </CriticListDiv>\n  );\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx",["135","136","137"],"import React, {ChangeEvent, FC, useState} from \"react\";\n// import {isEmail} from \"validator\";\nimport {signin} from \"../services/auth.service\";\nimport {SignInRequest} from \"../model/User\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\nimport {Alert, AlertTitle} from '@material-ui/lab';\n\nexport const RouterlessSigninView: FC<RouteComponentProps> = (props) => {\n  const {history} = props;\n  const [signInRequest, setSignInRequest] = useState<SignInRequest>({} as SignInRequest);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\n    setSignInRequest({\n      ...signInRequest,\n      email: event.target.value\n    });\n\n    if (!event.target.value) {\n      setEmailError(\"\");\n\n    } else if (event.target.value.length < 2) {\n      setEmailError(\"Email must be 2 + characters\");\n\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\n    setSignInRequest({\n      ...signInRequest,\n      password: event.target.value\n    });\n\n    if (!event.target.value) {\n      setPasswordError(\"\");\n\n    } else if (event.target.value.length < 2) {\n      setPasswordError(\"Password must be 2+ characters\");\n\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n\n// should I put CreateUserRequest from user.ts?\n\n  const handleSignIn = () => {\n    setMessage(\"\");\n    setLoading(true);\n\n    signin(signInRequest).then(response => {\n      // check response for error;\n      history.push(\"/\");\n    }, (error: any) => {\n      const errorMessage = parseErrorMessageFromErrorResponse(error);\n\n      setLoading(false);\n      setMessage(errorMessage);\n    });\n  }\n\n  const parseErrorMessageFromErrorResponse = (error: any): string => {\n    return (error.response && error.response.data && error.response.data.message)\n      || error.message\n      || error.toString()\n  }\n\n  return (\n    <div>\n      <div className=\"loginbox\">\n        {/* migrate away from onSubmit and forms and just have a button down blow with and onClick={handleSignin}*/}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\"> </label>\n          {/*value={email} we took this out from inline input tag*/}\n          <TextField id=\"outlined-basic\"\n                     label=\"Email\"\n                     variant=\"outlined\"\n                     type=\"text\"\n                     name=\"email\"\n                     onChange={onChangeEmail}\n                     className=\"form-control\"\n          />\n          {emailError && (\n            <Alert severity=\"error\">\n              <AlertTitle>{emailError} </AlertTitle>\n            </Alert>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\"> </label>\n          <TextField id=\"outlined-basic\"\n                     label=\"password\"\n                     variant=\"outlined\"\n                     type=\"password\"\n                     name=\"password\"\n                     className=\"form-control\"\n                     onChange={onChangePassword}/>\n\n          {passwordError && (\n            <Alert severity=\"error\">\n              <AlertTitle>{passwordError} </AlertTitle>\n            </Alert>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <Button variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSignIn}\n                  className=\"btn btn-primary btn-block\"\n                  disabled={loading}>\n            {loading && (\n              <span className=\"spinner-border spinner-border-sm\"/>\n            )}\n            <span>Sign In</span>\n          </Button>\n        </div>\n        {message && (\n          <div className=\"form-group\">\n            <div className=\"alert alert-danger\"\n                 role=\"alert\">\n              {message}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n};\n\nexport const SigninView = withRouter(RouterlessSigninView);\n\n\n//auth.services line 29 what type should signinrequest be?\n//signinview lines 146 and 156 both havea  signin button, which should i keep?\n//signinview unused parameters on handle signin line 92\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx",[],["138","139"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx",["140","141","142","143","144"],"import React, {useContext, useEffect} from 'react';\nimport {getUser} from \"../services/user.service\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {history} from \"../browserHistory\";\n\nexport const HomeView = () => {\n  const {setUser} = useContext(UserContext);\n\n  useEffect(() => {\n    if (!isLoggedIn()) {\n      history.replace(\"/signin\");\n      return;\n    }\n    const currentUser = getCurrentUserAuth();\n    getUser(currentUser.id)\n      .then(response => {\n        setUser(response.data);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <div>\n          <h1>Welcome to Tom Rotten-A movie review project</h1>\n        </div>\n        <nav className=\"navbar navbar-light bg-info\">\n          <h1>Like what you see? Connect with us on Social media!</h1>\n          <p><a href=\"https://www.facebook.com/\" target=\"_blank\"><img\n            src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/square-facebook-512.png\" height=\"60\"\n            width=\"60\" alt=\"\"/></a></p>\n          <p><a href=\"https://twitter.com/\" target=\"_blank\"><img\n            src=\"https://d1e2bohyu2u2w9.cloudfront.net/education/sites/default/files/product/twitter-product-image.png\"\n            height=\"60\" width=\"60\" alt=\"\"/></a></p>\n          <p><a href=\"https://www.linkedin.com/\" target=\"_blank\"><img\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRS4s3k1pIajgk3Rf-07CLW-WqbfKXE2VDXFA&usqp=CAU&ec=45761791\"\n            height=\"60\" width=\"60\" alt=\"\"/></a></p>\n          <p><a href=\"https://www.pinterest.com/\" target=\"_blank\"><img\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEgxnwMTT4WrNoXdjQlJZE4Vxj1Gnd8v1OGg&usqp=CAU&ec=45761791\"\n            height=\"60\" width=\"60\" alt=\"\"/></a></p>\n        </nav>\n      </div>\n      <div>\n        <nav className=\"navbar navbar-light bg-secondary\">\n          <div className=\"col-lg-12\">\n            <h2>Contact us:</h2>\n            <p>Phone: 111-111-1111</p>\n            <p>Email: noEmail@email.com </p>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":41,"column":8,"nodeType":"151","endLine":41,"endColumn":10,"suggestions":"152"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"153","severity":1,"message":"154","line":36,"column":12,"nodeType":"155","messageId":"156","endLine":36,"endColumn":17},{"ruleId":"149","severity":1,"message":"157","line":50,"column":8,"nodeType":"151","endLine":50,"endColumn":10,"suggestions":"158"},{"ruleId":"149","severity":1,"message":"159","line":58,"column":8,"nodeType":"151","endLine":58,"endColumn":10,"suggestions":"160"},{"ruleId":"149","severity":1,"message":"161","line":71,"column":6,"nodeType":"151","endLine":71,"endColumn":8,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"161","line":79,"column":6,"nodeType":"151","endLine":79,"endColumn":8,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":4,"column":33,"nodeType":"166","messageId":"167","endLine":4,"endColumn":73},{"ruleId":"153","severity":1,"message":"168","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"149","severity":1,"message":"169","line":15,"column":8,"nodeType":"151","endLine":15,"endColumn":10,"suggestions":"170"},{"ruleId":"153","severity":1,"message":"171","line":10,"column":9,"nodeType":"155","messageId":"156","endLine":10,"endColumn":12},{"ruleId":"153","severity":1,"message":"172","line":10,"column":65,"nodeType":"155","messageId":"156","endLine":10,"endColumn":81},{"ruleId":"153","severity":1,"message":"168","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"149","severity":1,"message":"173","line":29,"column":8,"nodeType":"151","endLine":29,"endColumn":10,"suggestions":"174"},{"ruleId":"149","severity":1,"message":"175","line":39,"column":8,"nodeType":"151","endLine":39,"endColumn":10,"suggestions":"176"},{"ruleId":"153","severity":1,"message":"177","line":5,"column":14,"nodeType":"155","messageId":"156","endLine":5,"endColumn":24},{"ruleId":"153","severity":1,"message":"178","line":5,"column":25,"nodeType":"155","messageId":"156","endLine":5,"endColumn":31},{"ruleId":"164","severity":1,"message":"165","line":2,"column":33,"nodeType":"166","messageId":"167","endLine":2,"endColumn":73},{"ruleId":"153","severity":1,"message":"179","line":7,"column":21,"nodeType":"155","messageId":"156","endLine":7,"endColumn":25},{"ruleId":"149","severity":1,"message":"180","line":83,"column":8,"nodeType":"151","endLine":83,"endColumn":10,"suggestions":"181"},{"ruleId":"153","severity":1,"message":"182","line":10,"column":7,"nodeType":"155","messageId":"156","endLine":10,"endColumn":15},{"ruleId":"153","severity":1,"message":"183","line":20,"column":7,"nodeType":"155","messageId":"156","endLine":20,"endColumn":17},{"ruleId":"153","severity":1,"message":"184","line":31,"column":7,"nodeType":"155","messageId":"156","endLine":31,"endColumn":20},{"ruleId":"145","replacedBy":"185"},{"ruleId":"147","replacedBy":"186"},{"ruleId":"149","severity":1,"message":"175","line":21,"column":8,"nodeType":"151","endLine":21,"endColumn":10,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":31,"column":24,"nodeType":"190","endLine":31,"endColumn":76},{"ruleId":"188","severity":1,"message":"189","line":34,"column":24,"nodeType":"190","endLine":34,"endColumn":71},{"ruleId":"188","severity":1,"message":"189","line":37,"column":24,"nodeType":"190","endLine":37,"endColumn":76},{"ruleId":"188","severity":1,"message":"189","line":40,"column":24,"nodeType":"190","endLine":40,"endColumn":77},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.","ArrayExpression",["193"],"@typescript-eslint/no-unused-vars","'movie' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["196"],["197"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.",["198"],"'Box' is defined but never used.","'TextareaAutosize' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["200"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["201"],"'required' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.",["191"],["192"],["202"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"209","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"216","fix":"220"},"Update the dependencies array to be: [setMovies]",{"range":"221","text":"222"},"Update the dependencies array to be: [id, setMovie]",{"range":"223","text":"224"},"Update the dependencies array to be: [id]",{"range":"225","text":"226"},"Update the dependencies array to be: [userId]",{"range":"227","text":"228"},{"range":"229","text":"228"},"Update the dependencies array to be: [history, setUser]",{"range":"230","text":"231"},"Update the dependencies array to be: [history]",{"range":"232","text":"233"},"Update the dependencies array to be: [setUser]",{"range":"234","text":"235"},"Update the dependencies array to be: [setUsers]",{"range":"236","text":"237"},{"range":"238","text":"235"},[968,970],"[setMovies]",[1239,1241],"[id, setMovie]",[1469,1471],"[id]",[1952,1954],"[userId]",[2117,2119],[513,515],"[history, setUser]",[970,972],"[history]",[1250,1252],"[setUser]",[2042,2044],"[setUsers]",[698,700]]