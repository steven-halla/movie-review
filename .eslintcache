[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx":"23","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts":"24"},{"size":1025,"mtime":1619678374908,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611854984062,"results":"27","hashOfConfig":"26"},{"size":2066,"mtime":1619684150068,"results":"28","hashOfConfig":"26"},{"size":3479,"mtime":1619685461876,"results":"29","hashOfConfig":"26"},{"size":5017,"mtime":1622255743391,"results":"30","hashOfConfig":"26"},{"size":1425,"mtime":1619317188648,"results":"31","hashOfConfig":"26"},{"size":1618,"mtime":1619317233779,"results":"32","hashOfConfig":"26"},{"size":814,"mtime":1619056559449,"results":"33","hashOfConfig":"26"},{"size":747,"mtime":1619684799457,"results":"34","hashOfConfig":"26"},{"size":1579,"mtime":1622018782037,"results":"35","hashOfConfig":"26"},{"size":5013,"mtime":1622059746943,"results":"36","hashOfConfig":"26"},{"size":2985,"mtime":1619684524531,"results":"37","hashOfConfig":"26"},{"size":1411,"mtime":1619685070442,"results":"38","hashOfConfig":"26"},{"size":1295,"mtime":1622251281520,"results":"39","hashOfConfig":"26"},{"size":141,"mtime":1619056559394,"results":"40","hashOfConfig":"26"},{"size":3494,"mtime":1622251844849,"results":"41","hashOfConfig":"26"},{"size":716,"mtime":1619314283053,"results":"42","hashOfConfig":"26"},{"size":5824,"mtime":1620180180579,"results":"43","hashOfConfig":"26"},{"size":5868,"mtime":1620073734551,"results":"44","hashOfConfig":"26"},{"size":696,"mtime":1619315028249,"results":"45","hashOfConfig":"26"},{"size":431,"mtime":1619321664113,"results":"46","hashOfConfig":"26"},{"size":2979,"mtime":1619685368481,"results":"47","hashOfConfig":"26"},{"size":2529,"mtime":1622255924315,"results":"48","hashOfConfig":"26"},{"size":94,"mtime":1619683655731,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"p37r31",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx",[],["109","110"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx",["111","112"],"import React, {useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getAllMovies} from \"../services/movie.service\";\nimport {MovieContext} from \"../services/movie.context\";\nimport {ViewHeader} from \"./ViewHeader\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {Movie} from \"../model/Movie\";\n\nconst StyledMovieListDiv = styled.div`\n  // & means \"this\"\n  &.movie-list {\n    max-width: 800px;\n    margin: auto;\n\n    .movies {\n      .movie {\n        height: 200px;\n\n        .movie-paper {\n          height: 100%;\n\n          &:hover {\n            background-color: #eee;\n          }\n        }\n      }\n    }\n  }\n`;\n\n// ({ this is to return an object )}\n// this gets our movies list from an url and returns the data to the user\nexport const MovieList = () => {\n    const {movies, setMovies} = useContext(MovieContext);\n\n    useEffect(() => {\n        getAllMovies()\n            .then(response => {\n                // console.log(\"movies\")\n                // console.log(response.data);\n                setMovies(response.data);\n            })\n\n    }, []);\n    return (\n        <StyledMovieListDiv className=\"movie-list\">\n            <Grid container spacing={1} direction=\"row\" className=\"movies\">\n                {movies.map((movie, index) => (\n                    <MovieView key={index} movie={movie}/>\n                ))}\n            </Grid>\n        </StyledMovieListDiv>\n    );\n};\n//check postman lets change url to inlcude url\nconst MovieView = (props: { movie: Movie; }) => {\n    const {movie} = props;\n\n    return (\n        <Grid item xs={12} sm={6} md={3} className=\"movie\">\n            <Link to={`movies/${movie.id}`}>\n                <Paper elevation={3} className=\"movie-paper\">\n                    <div>\n                        <h2>{movie.title}</h2>\n                    </div>\n                </Paper>\n            </Link>\n        </Grid>\n    );\n}\n\n// once we get both tables connected, movie title should be turned into a link tag\n// have the rating appear to the right of the title\n\n",["113","114"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx",["115","116","117"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport {getMovie, getMovieReviews} from \"services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {MovieContext} from \"services/movie.context\";\nimport {Movie, MovieReview} from \"model/Movie\";\nimport {AxiosResponse} from \"axios\";\nimport styled from \"styled-components\";\nimport {Box, Button, Paper} from \"@material-ui/core\";\n\nconst MovieViewDiv = styled.div`\n  &.movie-view {\n    max-width: 800px;\n    margin: auto;\n\n    .average-rating {\n      font-size: 18px;\n      font-weight: bold;\n    }\n\n    .leave-review-button {\n      font-size: 18px;\n    }\n\n    .movie-reviews {\n      .movie-review {\n        &:hover {\n          background-color: #eee;\n        }\n      }\n    }\n  }\n`;\n\nexport const MovieView = () => {\n    const {movie, setMovie} = useContext(MovieContext);\n\n    // @ts-ignore\n    const {id} = useParams();\n    // const {userId} = useParams();\n\n    const [reviews, setReviews] = useState<MovieReview[]>([]);\n\n    useEffect(() => {\n        getMovie(id)\n            .then((response: AxiosResponse<Movie>) => {\n                console.log(response.data);\n                setMovie(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getMovieReviews(id)\n            .then((response: AxiosResponse<MovieReview[]>) => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    // this is an \"expensive\" computation, in future every time a user calls\n    // PATCH /movies/{id}/review, we wil update review count and average review for\n    // the movie so that the client doesn't have to calculate this\n    const ratingSum: number = reviews\n        .map((review: MovieReview) => review.rating) // map MovieReview[] to number[]\n        .reduce((rating1: number, rating2: number) => rating1 + rating2, 0);\n\n    // ternary operator, short-hand for 'if () {} else {}'\n    const averageRating = reviews.length > 0\n        ? (ratingSum / reviews.length)\n        : 0;\n\n    return (\n        <MovieViewDiv className=\"movie-view\">\n            <div className=\"average-rating\">\n                average rating: {averageRating} / 10\n            </div>\n            <Box m=\"10px\">\n                <Button\n                    className=\"leave-review-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    href={`/movies/${id}/review`}\n                >\n                    Leave Review\n                </Button>\n            </Box>\n\n            <Box className=\"movie-reviews\">\n                {reviews\n                    .sort((a: MovieReview, b: MovieReview) => {\n                        return b.id - a.id;\n                    })\n                    .map((review: MovieReview, i: number) => (\n                    <Paper key={i} className=\"movie-review\" elevation={3}>\n                        <Link to={`/critics/${review.user.id}`}>\n                            <strong>rating: {review.rating}</strong>\n                            <p>review: {review.writtenReview}</p>\n                            {review.user.displayName ? (\n                                <p>by {review.user.displayName}</p>\n                            ) : (\n                                <p>by: anonymous</p>\n                            )}\n                        </Link>\n                    </Paper>\n                ))}\n            </Box>\n        </MovieViewDiv>\n\n    );\n};","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx",["118","119","120","121","122","123","124","125","126","127","128","129","130"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts",["131"],"export const authHeader = () => {\n    // lets read the \"userAuth\" object from local storage.\n    // it contains basic information about the user, such as id, displayName, and accessToken\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n\n    if (userAuth && userAuth.accessToken) {\n        return {'authorization': userAuth.accessToken};\n    } else {\n        return {}\n    }\n}\n\n//local storage is so that data is still there when the page closes down\n//otherwise , if we did session storage the session would be lost upon a page closing down.\n\n// this helper function checks local storage for user item.\n\n// if a logged in user has an JWT, return HTTP authorization header.\n\n// otherwise return an empty object\n\n\n\n//*****************\n// why do we need line 6, where we have userAuth twice?","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx",["132","133"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessSignoutView: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        // since <Header depends on user, calling setUser will cause the <Header> component to re-render.\n        setUser(undefined);\n        // this will clear localstorage\n        signout();\n        history.replace(\"/signin\");\n    }, []);\n\n    return null;\n}\n\nexport const SignoutView = withRouter(RouterlessSignoutView);\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx",["134","135"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx",["136","137"],"import React, {FC, useContext} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {UserContext} from \"../services/user.context\";\nimport styled from \"styled-components\";\nimport {RouteComponentProps} from \"react-router\";\nimport clsx from \"clsx\";\n\n// This will create a header on every page including our login/reg page\n\n\nconst StyleHeaderDiv = styled.div`\n  &.top-header {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n\n    .links {\n      width: 100%;\n      height: 100%;\n      max-width: 800px;\n      background-color: #eee;\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: flex-end;\n      align-items: center;\n\n      .link {\n        margin: 10px;\n        height: 100%;\n        line-height: 50px; // set line-height = height of container (50px) and this will vertically center text.\n        &:hover {\n          border-bottom: 2px solid black;\n        }\n      }\n\n      .selected {\n        border-bottom: 2px solid black;\n      }\n    }\n\n    a,\n    a:visited,\n    a:hover {\n      text-decoration: none;\n      color: black;\n    }\n  }\n`;\n\nconst RouterlessHeader: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {user} = useContext(UserContext);\n\n    const pathname = history.location.pathname;\n\n    if (isLoggedIn() && user != null) {\n        return (\n            <StyleHeaderDiv className=\"top-header\">\n                <div className=\"links\">\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/critics') && 'selected')}\n                        to=\"/critics\"\n                    >\n                        Critics\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/movies') && 'selected')}\n                        to=\"/movies\"\n                    >\n                        Movies\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname === '/' && 'selected')}\n                        to=\"/\"\n                    >\n                        Home\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/profile') && 'selected')}\n                        to=\"/profile\"\n                    >\n                        {user.displayName || user.email || 'Profile'}\n                    </Link>\n                </div>\n            </StyleHeaderDiv>\n        );\n    }\n    return (\n        <StyleHeaderDiv className=\"top-header\">\n            <div className=\"links\">\n                <Link className={clsx(\"link\", pathname === '/signin' && 'selected')} to={\"/signin\"}>Sign In</Link>\n                <Link className={clsx(\"link\", pathname === '/signup' && 'selected')} to={\"/signup\"}>Sign Up</Link>\n            </div>\n        </StyleHeaderDiv>\n    )\n}\n\nexport const Header = withRouter(RouterlessHeader);\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx",["138","139","140"],"import React, {FC, useContext, useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {getUser} from \"../services/user.service\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessLoginStateHandler: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        if (history.location) {\n            if (history.location.pathname === '/signin') {\n                return;\n            }\n            if (history.location.pathname === '/signup') {\n                return;\n            }\n            if (history.location.pathname === '/signout') {\n                return;\n            }\n        }\n\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n        }\n\n    }, []);\n\n    // set user state with current logged in user, if needed\n    useEffect(() => {\n        const userAuth = getCurrentUserAuth();\n        if (userAuth != null) {\n            getUser(userAuth.id).then(authedUser => {\n                // console.log(authedUser);\n                setUser(authedUser.data);\n            });\n        }\n    }, []);\n\n    return null;\n}\n\nexport const LoginStateHandler = withRouter(RouterlessLoginStateHandler);","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx",["141","142"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts",["143"],"export const getCurrentUserAuth = () =>  {\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n    return userAuth;\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["144","145","146"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx",["147","148","149","150","151"],"import React, {useState, FC, ChangeEvent} from \"react\";\n// import {isEmail} from \"validator\";\nimport {signin} from \"../services/auth.service\";\nimport {SignInRequest} from \"../model/User\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nconst required = (value: any) => {\n    if (!value) {\n        return (\n            <div>\n                <p>This field is required </p>\n            </div>\n        );\n    }\n};\n\nconst validEmail = (email: string) => {\n    return true;\n    // if (!isEmail(email)) {\n    //     return (\n    //         <div>\n    //             <p>This is not a valid email</p>\n    //         </div>\n    //     );\n    // }\n};\n\nconst validPassword = (password: string) => {\n    if (password.length < 8 || password.length > 20) {\n        return (\n            <div>\n                <p>Password must be between 8 and 20 characters</p>\n            </div>\n        );\n    }\n};\n\n// interface Props {\n//     user: User;\n//     setUser: (user: User) => void;\n// }\n// export const SigninView = props => { // same as with ()\nexport const RouterlessSigninView: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const [signInRequest, setSignInRequest] = useState<SignInRequest>({} as SignInRequest);\n\n    const [loading, setLoading] = useState(false);\n\n    const [message, setMessage] = useState(\"\");\n\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n\n    const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\n        setSignInRequest({\n            ...signInRequest,\n            email: event.target.value\n        });\n\n        if (!event.target.value) {\n            setEmailError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setEmailError(\"Email must be 2 + characters\");\n\n        } else {\n            setEmailError(\"\");\n        }\n    };\n\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\n        setSignInRequest({\n            ...signInRequest,\n            password: event.target.value\n        });\n\n        if (!event.target.value) {\n            setPasswordError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setPasswordError(\"Password must be 2+ characters\");\n\n        } else {\n            setPasswordError(\"\");\n        }\n    };\n\n// should I put CreateUserRequest from user.ts?\n\n    const handleSignIn = () => {\n        setMessage(\"\");\n        setLoading(true);\n        // validate all something is up with this one\n        //form.current.validateAll();\n\n        // console.log(signInRequest);\n\n        signin(signInRequest).then(response => {\n            // check response for error;\n            history.push(\"/\");\n        }, (error: any) => {\n            const errorMessage = parseErrorMessageFromErrorResponse(error);\n\n            setLoading(false);\n            setMessage(errorMessage);\n        });\n    }\n\n    const parseErrorMessageFromErrorResponse = (error: any): string => {\n        return (error.response && error.response.data && error.response.data.message)\n            || error.message\n            || error.toString()\n    }\n\n    return (\n        <div>\n            <div className=\"loginbox\">\n                {/* migrate away from onSubmit and forms and just have a button down blow with and onClick={handleSignin}*/}\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\"> </label>\n                    {/*value={email} we took this out from inline input tag*/}\n                    <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" type=\"text\" name=\"email\"\n                               onChange={onChangeEmail} className=\"form-control\"\n                        // validations={[required, validEmail]}\n\n                    />\n                    {emailError && (\n                        <Alert severity=\"error\">\n                            <AlertTitle>{emailError} </AlertTitle>\n                        </Alert>\n                    )}\n\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\"> </label>\n                    <TextField id=\"outlined-basic\" label=\"password\" variant=\"outlined\" type=\"password\" name=\"password\"\n                               className=\"form-control\" onChange={onChangePassword}/>\n\n                    {passwordError && (\n                        <Alert severity=\"error\">\n                            <AlertTitle>{passwordError} </AlertTitle>\n                        </Alert>\n                    )}\n                </div>\n\n                <div className=\"form-group\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSignIn}\n                            className=\"btn btn-primary btn-block\" disabled={loading}>\n                        {loading && (\n                            <span className=\"spinner-border spinner-border-sm\"/>\n                        )}\n                        <span>Sign In</span>\n                    </Button>\n                </div>\n\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {message}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n};\n\nexport const SigninView = withRouter(RouterlessSigninView);\n\n\n//auth.services line 29 what type should signinrequest be?\n//signinview lines 146 and 156 both havea  signin button, which should i keep?\n//signinview unused parameters on handle signin line 92\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx",[],["152","153"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx",["154","155","156","157","158"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":5,"column":9,"nodeType":"165","messageId":"166","endLine":5,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":45,"column":8,"nodeType":"169","endLine":45,"endColumn":10,"suggestions":"170"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"171","line":36,"column":12,"nodeType":"165","messageId":"166","endLine":36,"endColumn":17},{"ruleId":"167","severity":1,"message":"172","line":50,"column":8,"nodeType":"169","endLine":50,"endColumn":10,"suggestions":"173"},{"ruleId":"167","severity":1,"message":"174","line":58,"column":8,"nodeType":"169","endLine":58,"endColumn":10,"suggestions":"175"},{"ruleId":"163","severity":1,"message":"176","line":8,"column":9,"nodeType":"165","messageId":"166","endLine":8,"endColumn":26},{"ruleId":"163","severity":1,"message":"177","line":8,"column":28,"nodeType":"165","messageId":"166","endLine":8,"endColumn":40},{"ruleId":"163","severity":1,"message":"178","line":10,"column":9,"nodeType":"165","messageId":"166","endLine":10,"endColumn":14},{"ruleId":"163","severity":1,"message":"179","line":10,"column":29,"nodeType":"165","messageId":"166","endLine":10,"endColumn":53},{"ruleId":"163","severity":1,"message":"180","line":11,"column":9,"nodeType":"165","messageId":"166","endLine":11,"endColumn":13},{"ruleId":"163","severity":1,"message":"181","line":13,"column":9,"nodeType":"165","messageId":"166","endLine":13,"endColumn":22},{"ruleId":"163","severity":1,"message":"171","line":61,"column":12,"nodeType":"165","messageId":"166","endLine":61,"endColumn":17},{"ruleId":"163","severity":1,"message":"182","line":62,"column":12,"nodeType":"165","messageId":"166","endLine":62,"endColumn":16},{"ruleId":"163","severity":1,"message":"183","line":62,"column":18,"nodeType":"165","messageId":"166","endLine":62,"endColumn":25},{"ruleId":"163","severity":1,"message":"184","line":73,"column":9,"nodeType":"165","messageId":"166","endLine":73,"endColumn":22},{"ruleId":"167","severity":1,"message":"174","line":120,"column":8,"nodeType":"169","endLine":120,"endColumn":10,"suggestions":"185"},{"ruleId":"167","severity":1,"message":"172","line":129,"column":8,"nodeType":"169","endLine":129,"endColumn":10,"suggestions":"186"},{"ruleId":"167","severity":1,"message":"174","line":140,"column":8,"nodeType":"169","endLine":140,"endColumn":10,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":4,"column":33,"nodeType":"190","messageId":"191","endLine":4,"endColumn":73},{"ruleId":"163","severity":1,"message":"192","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"167","severity":1,"message":"193","line":17,"column":8,"nodeType":"169","endLine":17,"endColumn":10,"suggestions":"194"},{"ruleId":"163","severity":1,"message":"195","line":10,"column":9,"nodeType":"165","messageId":"166","endLine":10,"endColumn":12},{"ruleId":"163","severity":1,"message":"196","line":10,"column":65,"nodeType":"165","messageId":"166","endLine":10,"endColumn":81},{"ruleId":"163","severity":1,"message":"197","line":3,"column":15,"nodeType":"165","messageId":"166","endLine":3,"endColumn":25},{"ruleId":"163","severity":1,"message":"198","line":6,"column":9,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"163","severity":1,"message":"192","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"167","severity":1,"message":"199","line":30,"column":8,"nodeType":"169","endLine":30,"endColumn":10,"suggestions":"200"},{"ruleId":"167","severity":1,"message":"201","line":41,"column":8,"nodeType":"169","endLine":41,"endColumn":10,"suggestions":"202"},{"ruleId":"163","severity":1,"message":"203","line":7,"column":14,"nodeType":"165","messageId":"166","endLine":7,"endColumn":24},{"ruleId":"163","severity":1,"message":"204","line":7,"column":25,"nodeType":"165","messageId":"166","endLine":7,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":2,"column":33,"nodeType":"190","messageId":"191","endLine":2,"endColumn":73},{"ruleId":"163","severity":1,"message":"205","line":7,"column":21,"nodeType":"165","messageId":"166","endLine":7,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":9,"column":9,"nodeType":"165","messageId":"166","endLine":9,"endColumn":19},{"ruleId":"167","severity":1,"message":"206","line":93,"column":8,"nodeType":"169","endLine":93,"endColumn":10,"suggestions":"207"},{"ruleId":"163","severity":1,"message":"208","line":8,"column":9,"nodeType":"165","messageId":"166","endLine":8,"endColumn":19},{"ruleId":"163","severity":1,"message":"209","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":16},{"ruleId":"163","severity":1,"message":"210","line":13,"column":7,"nodeType":"165","messageId":"166","endLine":13,"endColumn":15},{"ruleId":"163","severity":1,"message":"211","line":23,"column":7,"nodeType":"165","messageId":"166","endLine":23,"endColumn":17},{"ruleId":"163","severity":1,"message":"212","line":34,"column":7,"nodeType":"165","messageId":"166","endLine":34,"endColumn":20},{"ruleId":"159","replacedBy":"213"},{"ruleId":"161","replacedBy":"214"},{"ruleId":"167","severity":1,"message":"201","line":23,"column":8,"nodeType":"169","endLine":23,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":37,"column":24,"nodeType":"218","endLine":37,"endColumn":76},{"ruleId":"216","severity":1,"message":"217","line":40,"column":24,"nodeType":"218","endLine":40,"endColumn":71},{"ruleId":"216","severity":1,"message":"217","line":43,"column":24,"nodeType":"218","endLine":43,"endColumn":76},{"ruleId":"216","severity":1,"message":"217","line":46,"column":24,"nodeType":"218","endLine":46,"endColumn":77},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"@typescript-eslint/no-unused-vars","'ViewHeader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'movie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["223"],"'deleteMovieReview' is defined but never used.","'getAllMovies' is defined but never used.","'Movie' is defined but never used.","'MovieReviewUpdateRequest' is defined but never used.","'User' is defined but never used.","'AxiosResponse' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'movieReviewId' is assigned a value but never used.",["224"],["225"],["226"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.",["227"],"'Box' is defined but never used.","'TextareaAutosize' is defined but never used.","'useHistory' is defined but never used.","'history' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["229"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["230"],"'makeStyles' is defined but never used.","'Snackbar' is defined but never used.","'required' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.",["219"],["220"],["231"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"234","fix":"239"},{"desc":"236","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"245","fix":"249"},"Update the dependencies array to be: [setMovies]",{"range":"250","text":"251"},"Update the dependencies array to be: [id, setMovie]",{"range":"252","text":"253"},"Update the dependencies array to be: [id]",{"range":"254","text":"255"},{"range":"256","text":"255"},{"range":"257","text":"253"},{"range":"258","text":"255"},"Update the dependencies array to be: [history, setUser]",{"range":"259","text":"260"},"Update the dependencies array to be: [history]",{"range":"261","text":"262"},"Update the dependencies array to be: [setUser]",{"range":"263","text":"264"},"Update the dependencies array to be: [setUsers]",{"range":"265","text":"266"},{"range":"267","text":"264"},[1121,1123],"[setMovies]",[1239,1241],"[id, setMovie]",[1469,1471],"[id]",[2927,2929],[3117,3119],[3346,3348],[659,661],"[history, setUser]",[971,973],"[history]",[1312,1314],"[setUser]",[2347,2349],"[setUsers]",[700,702]]