[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.jsx":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.jsx":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.jsx":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.jsx":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.jsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.jsx":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.js":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx":"23"},{"size":1021,"mtime":1615861257836,"results":"24","hashOfConfig":"25"},{"size":3829,"mtime":1618273909818,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1611854984062,"results":"27","hashOfConfig":"25"},{"size":3417,"mtime":1618271333670,"results":"28","hashOfConfig":"25"},{"size":103,"mtime":1613513089166,"results":"29","hashOfConfig":"25"},{"size":1659,"mtime":1618298196337,"results":"30","hashOfConfig":"25"},{"size":2058,"mtime":1618364834805,"results":"31","hashOfConfig":"25"},{"size":1844,"mtime":1618439714692,"results":"32","hashOfConfig":"25"},{"size":1646,"mtime":1619125446005,"results":"33","hashOfConfig":"25"},{"size":4080,"mtime":1618270943724,"results":"34","hashOfConfig":"25"},{"size":1575,"mtime":1618365472910,"results":"35","hashOfConfig":"25"},{"size":814,"mtime":1619056559449,"results":"36","hashOfConfig":"25"},{"size":578,"mtime":1618439441412,"results":"37","hashOfConfig":"25"},{"size":1247,"mtime":1619056559330,"results":"38","hashOfConfig":"25"},{"size":2734,"mtime":1618273412293,"results":"39","hashOfConfig":"25"},{"size":1237,"mtime":1618281864229,"results":"40","hashOfConfig":"25"},{"size":560,"mtime":1615513150254,"results":"41","hashOfConfig":"25"},{"size":691,"mtime":1618271333675,"results":"42","hashOfConfig":"25"},{"size":141,"mtime":1619056559394,"results":"43","hashOfConfig":"25"},{"size":678,"mtime":1619127387670,"results":"44","hashOfConfig":"25"},{"size":1720,"mtime":1618366496653,"results":"45","hashOfConfig":"25"},{"size":675,"mtime":1618439714688,"results":"46","hashOfConfig":"25"},{"size":5051,"mtime":1619125466534,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"p37r31",{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js",[],["105","106"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js",["107","108","109","110","111","112","113"],"import React, {useState, useEffect} from 'react';\nimport {Route, Router, Switch} from \"react-router\";\nimport {history} from './browserHistory';\nimport {SigninView} from './views/SigninView';\nimport {SignupView} from './views/SignupView';\nimport {HomeView} from \"./views/HomeView\";\nimport {CriticList} from './views/CriticList';\nimport {CriticView} from './views/CriticView';\nimport {MovieList} from './views/MovieList';\nimport {MovieView} from './views/MovieView';\nimport {CreateReview} from './views/CreateReview';\nimport {LoginStateHandler} from './views/LoginStateHandler';\n\n\n// change up home view\n\nimport './App.scss';\nimport {SignoutView} from \"./views/SignoutView\";\nimport {Header} from \"./views/Header\";\nimport {ProfileView} from \"./views/ProfileView\";\nimport {getCurrentUserAuth} from \"./services/getCurrentUserAuth\";\nimport {getUser} from \"./services/user.service\";\nimport {UserContextProvider} from \"./services/user.context\";\nimport {MovieContextProvider} from \"./services/movie.context\";\n\n\nexport const App = () => {\n    // DELETE\n    // Should I include email for this or make a seperate user for register?\n    const [user, setUser] = useState({\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const [users, setUsers] = useState([]);\n\n    const [movie, setMovie] = useState({\n        title: \"\",\n        rating: \"\",\n        writtenReview: \"\",\n    });\n\n    //i put this in so that our critic list will display data\n\n    const [movies, setMovies] = useState([]);\n\n    // set user state with current logged in user, if needed\n    useEffect(() => {\n        const userAuth = getCurrentUserAuth();\n        if (userAuth != null) {\n            getUser(userAuth.id).then(authedUser => {\n                // console.log(authedUser);\n                setUser(authedUser.data);\n            });\n        }\n    }, []);\n\n    return (\n        <UserContextProvider>\n            <MovieContextProvider>\n                <Router history={history}>\n                    <div className=\"App\">\n\n                        <LoginStateHandler history={history}/>\n\n                        <Header history={history}/>\n\n                        <Switch>\n                            <Route exact path=\"/signin\">\n                                <SigninView />\n                            </Route>\n\n                            <Route exact path=\"/signup\">\n                                <SignupView />\n                            </Route>\n\n                            <Route exact path=\"/signout\">\n                                <SignoutView />\n                            </Route>\n\n                            <Route exact path=\"/\">\n                                <HomeView />\n                            </Route>\n\n                            <Route exact path=\"/profile\">\n                                <ProfileView />\n                            </Route>\n\n                            <Route exact path=\"/movies\">\n                                <MovieList />\n                            </Route>\n\n                            <Route exact path=\"/movies/:id\">\n                                <MovieView  />\n                            </Route>\n\n                            <Route exact path=\"/movie/:id/review\">\n                                <CreateReview  />\n                            </Route>\n\n                            <Route exact path=\"/critics\">\n                                <CriticList />\n                            </Route>\n\n                            <Route exact path=\"/critics/:id\">\n                                <CriticView />\n                            </Route>\n\n\n                        </Switch>\n\n                        {/*<footer />*/}\n                    </div>\n                </Router>\n            </MovieContextProvider>\n        </UserContextProvider>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx",["114","115","116","117","118","119"],"import React, {useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {getUser} from \"../services/user.service\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const HomeView = () => {\n    const { setUser } = useContext(UserContext);;\n\n    useEffect(() => {\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n            return;\n        }\n\n        const currentUser = getCurrentUserAuth();\n        getUser(currentUser.id)\n            .then(response => {\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Home</h1>\n            </div>\n            <div>\n                <p>3 random movies here</p>\n                <p>Each movie will have a random review from our DB pop up</p>\n                <p>Each movie will have a review average based on the number of reviews it got</p>\n\n            </div>\n\n            <div>\n                <img className=\"movie-image\" src=\"https://deepfocusreview.com/wp-content/uploads/2016/12/aliens.jpg\"\n                     alt=\"\"/>\n                <p>This is where a random review is going to go!</p>\n                <p>This is where our review score will go based on the total amount of reviews. </p>\n                <p>I may include movies that have the most reviews pop up as well.</p>\n                <p>I could have multiple movie slots. One for most reviewed, one for best reviews and worst reviews\n                    as a couple of examples.</p>\n            </div>\n\n            <div>\n\n                <nav className=\"navbar navbar-light bg-info\">\n                    <h1>Like what you see? Connect with us on Social media!</h1>\n                    <p><a href=\"https://www.facebook.com/\" target=\"_blank\"><img\n                        src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/square-facebook-512.png\" height=\"60\"\n                        width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://twitter.com/\" target=\"_blank\"><img\n                        src=\"https://d1e2bohyu2u2w9.cloudfront.net/education/sites/default/files/product/twitter-product-image.png\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.linkedin.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRS4s3k1pIajgk3Rf-07CLW-WqbfKXE2VDXFA&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.pinterest.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEgxnwMTT4WrNoXdjQlJZE4Vxj1Gnd8v1OGg&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n\n                </nav>\n            </div>\n\n            <div>\n                <nav className=\"navbar navbar-light bg-secondary\">\n                    <div className=\"col-lg-12\">\n                        <h2>Contact us:</h2>\n\n                        <p>Phone: 777-8675-309</p>\n                        <p>Email: admin@tomrotten.com</p>\n                    </div>\n                </nav>\n            </div>\n\n\n        </div>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js",["120"],"import { createBrowserHistory, History } from 'history';\nexport const history = createBrowserHistory();","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.jsx",["121","122"],"import React, {useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getAllMovies} from \"../services/movie.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {MovieContext} from \"../services/movie.context\";\n\n// ({ this is to return an object )}\n// this gets our movies list from an url and returns the data to the user\nexport const MovieList = () => {\n    const { movies, setMovies } = useContext(MovieContext);\n\n\n\n    useEffect(() => {\n        getAllMovies()\n            .then(response => {\n                console.log(response.data);\n                setMovies(response.data);\n            })\n\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Movies</h1>\n            </div>\n            <div>\n                {movies.map((movie, index) => (\n                    <SelectedMovie key={index} movie={movie} />\n                ))}\n            </div>\n        </div>\n\n    );\n};\n//check postman lets change url to inlcude url\nconst SelectedMovie = (props) => {\n    const movie = props.movie;\n\n    return(\n        <section>\n            <ul>\n                {/*this pulls from the movie_reviews model we still need to join both tables */}\n                <li>\n                    movie title: <p>{movie.title} {movie.id}</p>\n                </li>\n\n                <li>\n                    Check out full stats <Link to={`movies/${movie.id}`}>Movie stats</Link>\n                </li>\n\n            </ul>\n        </section>\n    );\n}\n\n// once we get both tables connected, movie title should be turned into a link tag\n// have the rating appear to the right of the title\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.jsx",["123","124","125","126"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport {getMovie, getMovieReviews} from \"../services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {getUsers} from \"../services/user.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {MovieContext} from \"../services/movie.context\";\n\n\nexport const MovieView = () => {\n    const {movie, setMovie} = useContext(MovieContext);\n\n    const {setUser} = useContext(UserContext);\n    const {id} = useParams();\n    const {userId} = useParams();\n\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getMovie(id)\n            .then(response => {\n                console.log(response.data);\n                setMovie(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getMovieReviews(id)\n            .then(response => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getUsers()\n            .then(response => {\n                console.log(response.data);\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Movie View</h1>\n            </div>\n            <div>\n\n                <Link to={`/movie/${movie.id}/review`}>Review Movie</Link>\n\n                <p>\n                    <strong>Ratings</strong>\n                    <ol>\n                        {reviews.map(review => (\n                            <li>\n                                <Link to={`/critics/${review.id}`}>\n                                    <strong>movie rating:{review.rating}</strong> - writtenReview:\n                                    \"{review.writtenReview}\" name of reviewer: {review.user.displayName}\n                                </Link>\n                            </li>\n\n\n                        ))}\n                    </ol>\n\n\n                </p>\n\n            </div>\n        </div>\n    );\n};","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.jsx",["127","128","129","130"],"import React, {useContext, useEffect, useState} from 'react';\n\nimport {useParams} from \"react-router\";\nimport {getUserProfile, getUserReviews} from \"../services/user.service\";\n\nimport {UserContext} from \"../services/user.context\";\n\nexport const CriticView = (props) => {\n    // descructuring on objects.\n    const { userProfile, setUserProfile } = useState({});\n\n    const {id} = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getUserProfile(id)\n            .then(response => {\n                setUserProfile(response.data);\n            });\n    }, []);\n\n    // useEffect( () => {\n    //     getMovie(id)\n    //         .then(response => {\n    //             console.log(response.data);\n    //             setMovie(response.data);\n    //         });\n    //\n    // }, []);\n\n    useEffect( () => {\n        getUserReviews(id)\n            .then(response => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    // getUserReviews\n    // /users/id/reviews\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Critic</h1>\n            </div>\n            <ol>\n                {reviews.map(review => (\n                    //currently this grabs movie ids that match with user id\n                    <li>\n                        <strong>Movie:{review.movie.title}</strong>\n                        <br/>\n                        <strong>rating: {review.rating}</strong>\n                        <br/>\n                        <strong>written review: {review.writtenReview}</strong>\n                    </li>\n                ))}\n            </ol>\n            <div>\n                <p>ID: {userProfile.id}</p>\n                <p>Name: {userProfile.displayName}</p>\n\n\n            </div>\n        </div>\n    );\n};\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],["131","132"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts",["133"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx",["134"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const SignoutView: FC = () => {\n    const { setUser } = useContext(UserContext);\n\n    useEffect(() => {\n        // since <Header depends on user, calling setUser will cause the <Header> component to re-render.\n        setUser(undefined);\n        // this will clear localstorage\n        signout();\n        history.replace(\"/signin\");\n    }, []);\n\n    return <></>;\n}\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.jsx",["135"],"import React, {useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\n\nexport const LoginStateHandler = (props) => {\n    const {history} = props;\n\n    useEffect(() => {\n        if (history.location.pathname === '/signin') {\n            return;\n        }\n        if (history.location.pathname === '/signup') {\n            return;\n        }\n        if (history.location.pathname === '/signout') {\n            return;\n        }\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n        }\n\n    }, []);\n\n    return <></>;\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts",["136"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["137"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getUsers} from \"../services/user.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {AxiosResponse} from \"axios\";\nimport {User} from \"../model/User\";\n\n// we are not making adds/deletes to he list, therefore we will set our list to a key named index ( the index of the item)\n// if we add/delete items  then index would not work. In that case we would need the item id number.\n\nexport const CriticList: FC = () => {\n    const { users, setUsers } = useContext(UserContext);\n\n    useEffect(() => {\n        getUsers()\n            .then((response: AxiosResponse<User[]>) => {\n                setUsers(response.data);\n            });\n\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Critic List</h1>\n            </div>\n            <div>\n                {users.map((user, index) => (\n                    <CriticUser key={index} user={user}/>\n                ))}\n            </div>\n        </div>\n\n    );\n};\n\ninterface CriticUserProps {\n    user: User;\n}\n// FC<CriticsUserProps> <-- this is called \"generics\", google \"typescript basic generics\" \"what is generics\"\nconst CriticUser: FC<CriticUserProps> = (props) => {\n    const { user } = props;\n    return (\n        <section>\n            <ul>\n\n                <li>\n                    user name: <p>{user.displayName}</p>\n                </li>\n\n                <li>\n                    profile: <Link to={`/critics/${user.id}`}>View Profile</Link>\n                </li>\n\n                <li>\n                    id :<p>{user.id}</p>\n                </li>\n\n            </ul>\n        </section>\n    );\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx",["138","139","140","141","142","143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":30,"column":12,"nodeType":"151","messageId":"152","endLine":30,"endColumn":16},{"ruleId":"149","severity":1,"message":"153","line":36,"column":12,"nodeType":"151","messageId":"152","endLine":36,"endColumn":17},{"ruleId":"149","severity":1,"message":"154","line":36,"column":19,"nodeType":"151","messageId":"152","endLine":36,"endColumn":27},{"ruleId":"149","severity":1,"message":"155","line":38,"column":12,"nodeType":"151","messageId":"152","endLine":38,"endColumn":17},{"ruleId":"149","severity":1,"message":"156","line":38,"column":19,"nodeType":"151","messageId":"152","endLine":38,"endColumn":27},{"ruleId":"149","severity":1,"message":"157","line":46,"column":12,"nodeType":"151","messageId":"152","endLine":46,"endColumn":18},{"ruleId":"149","severity":1,"message":"158","line":46,"column":20,"nodeType":"151","messageId":"152","endLine":46,"endColumn":29},{"ruleId":"149","severity":1,"message":"159","line":2,"column":9,"nodeType":"151","messageId":"152","endLine":2,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":23,"column":8,"nodeType":"162","endLine":23,"endColumn":10,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":51,"column":24,"nodeType":"166","endLine":51,"endColumn":76},{"ruleId":"164","severity":1,"message":"165","line":54,"column":24,"nodeType":"166","endLine":54,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":57,"column":24,"nodeType":"166","endLine":57,"endColumn":76},{"ruleId":"164","severity":1,"message":"165","line":60,"column":24,"nodeType":"166","endLine":60,"endColumn":77},{"ruleId":"149","severity":1,"message":"167","line":1,"column":32,"nodeType":"151","messageId":"152","endLine":1,"endColumn":39},{"ruleId":"149","severity":1,"message":"168","line":4,"column":9,"nodeType":"151","messageId":"152","endLine":4,"endColumn":20},{"ruleId":"160","severity":1,"message":"169","line":21,"column":8,"nodeType":"162","endLine":21,"endColumn":10,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"171","line":15,"column":12,"nodeType":"151","messageId":"152","endLine":15,"endColumn":18},{"ruleId":"160","severity":1,"message":"172","line":25,"column":8,"nodeType":"162","endLine":25,"endColumn":10,"suggestions":"173"},{"ruleId":"160","severity":1,"message":"174","line":33,"column":8,"nodeType":"162","endLine":33,"endColumn":10,"suggestions":"175"},{"ruleId":"160","severity":1,"message":"161","line":41,"column":8,"nodeType":"162","endLine":41,"endColumn":10,"suggestions":"176"},{"ruleId":"149","severity":1,"message":"177","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"168","line":6,"column":9,"nodeType":"151","messageId":"152","endLine":6,"endColumn":20},{"ruleId":"160","severity":1,"message":"178","line":20,"column":8,"nodeType":"162","endLine":20,"endColumn":10,"suggestions":"179"},{"ruleId":"160","severity":1,"message":"174","line":37,"column":8,"nodeType":"162","endLine":37,"endColumn":10,"suggestions":"180"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"181","severity":1,"message":"182","line":4,"column":33,"nodeType":"183","messageId":"184","endLine":4,"endColumn":73},{"ruleId":"160","severity":1,"message":"161","line":15,"column":8,"nodeType":"162","endLine":15,"endColumn":10,"suggestions":"185"},{"ruleId":"160","severity":1,"message":"186","line":21,"column":8,"nodeType":"162","endLine":21,"endColumn":10,"suggestions":"187"},{"ruleId":"181","severity":1,"message":"182","line":2,"column":33,"nodeType":"183","messageId":"184","endLine":2,"endColumn":73},{"ruleId":"160","severity":1,"message":"188","line":20,"column":8,"nodeType":"162","endLine":20,"endColumn":10,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":32},{"ruleId":"190","severity":1,"message":"177","line":1,"column":34,"nodeType":"151","messageId":"152","endLine":1,"endColumn":44},{"ruleId":"190","severity":1,"message":"192","line":1,"column":50,"nodeType":"151","messageId":"152","endLine":1,"endColumn":60},{"ruleId":"190","severity":1,"message":"168","line":6,"column":9,"nodeType":"151","messageId":"152","endLine":6,"endColumn":20},{"ruleId":"190","severity":1,"message":"193","line":9,"column":7,"nodeType":"151","messageId":"152","endLine":9,"endColumn":15},{"ruleId":"190","severity":1,"message":"194","line":19,"column":7,"nodeType":"151","messageId":"152","endLine":19,"endColumn":17},{"ruleId":"190","severity":1,"message":"195","line":30,"column":7,"nodeType":"151","messageId":"152","endLine":30,"endColumn":20},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'movie' is assigned a value but never used.","'setMovie' is assigned a value but never used.","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["198"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'History' is defined but never used.","'UserContext' is defined but never used.","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.",["199"],"'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["201"],["202"],"'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'setUserProfile'. Either include them or remove the dependency array.",["203"],["204"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as",["205"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["207"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","'MouseEvent' is defined but never used.","'required' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"208","fix":"216"},{"desc":"217","fix":"218"},{"desc":"214","fix":"219"},{"desc":"208","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [setUser]",{"range":"225","text":"226"},"Update the dependencies array to be: [setMovies]",{"range":"227","text":"228"},"Update the dependencies array to be: [id, setMovie]",{"range":"229","text":"230"},"Update the dependencies array to be: [id]",{"range":"231","text":"232"},{"range":"233","text":"226"},"Update the dependencies array to be: [id, setUserProfile]",{"range":"234","text":"235"},{"range":"236","text":"232"},{"range":"237","text":"226"},"Update the dependencies array to be: [history]",{"range":"238","text":"239"},"Update the dependencies array to be: [setUsers]",{"range":"240","text":"241"},[741,743],"[setUser]",[651,653],"[setMovies]",[807,809],"[id, setMovie]",[1005,1007],"[id]",[1191,1193],[593,595],"[id, setUserProfile]",[1009,1011],[551,553],[535,537],"[history]",[758,760],"[setUsers]"]