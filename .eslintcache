[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.jsx":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.jsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.jsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx":"23","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx":"24"},{"size":1021,"mtime":1615861257836,"results":"25","hashOfConfig":"26"},{"size":3829,"mtime":1618273909818,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611854984062,"results":"28","hashOfConfig":"26"},{"size":3417,"mtime":1618271333670,"results":"29","hashOfConfig":"26"},{"size":103,"mtime":1613513089166,"results":"30","hashOfConfig":"26"},{"size":2051,"mtime":1619322072929,"results":"31","hashOfConfig":"26"},{"size":3452,"mtime":1619320997156,"results":"32","hashOfConfig":"26"},{"size":2398,"mtime":1619320997153,"results":"33","hashOfConfig":"26"},{"size":1425,"mtime":1619317188648,"results":"34","hashOfConfig":"26"},{"size":1618,"mtime":1619317233779,"results":"35","hashOfConfig":"26"},{"size":814,"mtime":1619056559449,"results":"36","hashOfConfig":"26"},{"size":578,"mtime":1618439441412,"results":"37","hashOfConfig":"26"},{"size":1394,"mtime":1619317128037,"results":"38","hashOfConfig":"26"},{"size":2952,"mtime":1619317563714,"results":"39","hashOfConfig":"26"},{"size":1237,"mtime":1618281864229,"results":"40","hashOfConfig":"26"},{"size":560,"mtime":1615513150254,"results":"41","hashOfConfig":"26"},{"size":691,"mtime":1618271333675,"results":"42","hashOfConfig":"26"},{"size":141,"mtime":1619056559394,"results":"43","hashOfConfig":"26"},{"size":1720,"mtime":1618366496653,"results":"44","hashOfConfig":"26"},{"size":716,"mtime":1619314283053,"results":"45","hashOfConfig":"26"},{"size":5051,"mtime":1619125466534,"results":"46","hashOfConfig":"26"},{"size":4418,"mtime":1619214450964,"results":"47","hashOfConfig":"26"},{"size":696,"mtime":1619315028249,"results":"48","hashOfConfig":"26"},{"size":431,"mtime":1619321664113,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"p37r31",{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js",[],["111","112"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js",["113","114","115","116","117","118","119"],"import React, {useState, useEffect} from 'react';\nimport {Route, Router, Switch} from \"react-router\";\nimport {history} from './browserHistory';\nimport {SigninView} from './views/SigninView';\nimport {SignupView} from './views/SignupView';\nimport {HomeView} from \"./views/HomeView\";\nimport {CriticList} from './views/CriticList';\nimport {CriticView} from './views/CriticView';\nimport {MovieList} from './views/MovieList';\nimport {MovieView} from './views/MovieView';\nimport {CreateReview} from './views/CreateReview';\nimport {LoginStateHandler} from './views/LoginStateHandler';\n\n\n// change up home view\n\nimport './App.scss';\nimport {SignoutView} from \"./views/SignoutView\";\nimport {Header} from \"./views/Header\";\nimport {ProfileView} from \"./views/ProfileView\";\nimport {getCurrentUserAuth} from \"./services/getCurrentUserAuth\";\nimport {getUser} from \"./services/user.service\";\nimport {UserContextProvider} from \"./services/user.context\";\nimport {MovieContextProvider} from \"./services/movie.context\";\n\n\nexport const App = () => {\n    // DELETE\n    // Should I include email for this or make a seperate user for register?\n    const [user, setUser] = useState({\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const [users, setUsers] = useState([]);\n\n    const [movie, setMovie] = useState({\n        title: \"\",\n        rating: \"\",\n        writtenReview: \"\",\n    });\n\n    //i put this in so that our critic list will display data\n\n    const [movies, setMovies] = useState([]);\n\n    // set user state with current logged in user, if needed\n    useEffect(() => {\n        const userAuth = getCurrentUserAuth();\n        if (userAuth != null) {\n            getUser(userAuth.id).then(authedUser => {\n                // console.log(authedUser);\n                setUser(authedUser.data);\n            });\n        }\n    }, []);\n\n    return (\n        <UserContextProvider>\n            <MovieContextProvider>\n                <Router history={history}>\n                    <div className=\"App\">\n\n                        <LoginStateHandler history={history}/>\n\n                        <Header history={history}/>\n\n                        <Switch>\n                            <Route exact path=\"/signin\">\n                                <SigninView />\n                            </Route>\n\n                            <Route exact path=\"/signup\">\n                                <SignupView />\n                            </Route>\n\n                            <Route exact path=\"/signout\">\n                                <SignoutView />\n                            </Route>\n\n                            <Route exact path=\"/\">\n                                <HomeView />\n                            </Route>\n\n                            <Route exact path=\"/profile\">\n                                <ProfileView />\n                            </Route>\n\n                            <Route exact path=\"/movies\">\n                                <MovieList />\n                            </Route>\n\n                            <Route exact path=\"/movies/:id\">\n                                <MovieView  />\n                            </Route>\n\n                            <Route exact path=\"/movie/:id/review\">\n                                <CreateReview  />\n                            </Route>\n\n                            <Route exact path=\"/critics\">\n                                <CriticList />\n                            </Route>\n\n                            <Route exact path=\"/critics/:id\">\n                                <CriticView />\n                            </Route>\n\n\n                        </Switch>\n\n                        {/*<footer />*/}\n                    </div>\n                </Router>\n            </MovieContextProvider>\n        </UserContextProvider>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx",["120","121","122","123","124","125"],"import React, {useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {getUser} from \"../services/user.service\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const HomeView = () => {\n    const { setUser } = useContext(UserContext);;\n\n    useEffect(() => {\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n            return;\n        }\n\n        const currentUser = getCurrentUserAuth();\n        getUser(currentUser.id)\n            .then(response => {\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Home</h1>\n            </div>\n            <div>\n                <p>3 random movies here</p>\n                <p>Each movie will have a random review from our DB pop up</p>\n                <p>Each movie will have a review average based on the number of reviews it got</p>\n\n            </div>\n\n            <div>\n                <img className=\"movie-image\" src=\"https://deepfocusreview.com/wp-content/uploads/2016/12/aliens.jpg\"\n                     alt=\"\"/>\n                <p>This is where a random review is going to go!</p>\n                <p>This is where our review score will go based on the total amount of reviews. </p>\n                <p>I may include movies that have the most reviews pop up as well.</p>\n                <p>I could have multiple movie slots. One for most reviewed, one for best reviews and worst reviews\n                    as a couple of examples.</p>\n            </div>\n\n            <div>\n\n                <nav className=\"navbar navbar-light bg-info\">\n                    <h1>Like what you see? Connect with us on Social media!</h1>\n                    <p><a href=\"https://www.facebook.com/\" target=\"_blank\"><img\n                        src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/square-facebook-512.png\" height=\"60\"\n                        width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://twitter.com/\" target=\"_blank\"><img\n                        src=\"https://d1e2bohyu2u2w9.cloudfront.net/education/sites/default/files/product/twitter-product-image.png\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.linkedin.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRS4s3k1pIajgk3Rf-07CLW-WqbfKXE2VDXFA&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.pinterest.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEgxnwMTT4WrNoXdjQlJZE4Vxj1Gnd8v1OGg&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n\n                </nav>\n            </div>\n\n            <div>\n                <nav className=\"navbar navbar-light bg-secondary\">\n                    <div className=\"col-lg-12\">\n                        <h2>Contact us:</h2>\n\n                        <p>Phone: 777-8675-309</p>\n                        <p>Email: admin@tomrotten.com</p>\n                    </div>\n                </nav>\n            </div>\n\n\n        </div>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js",["126"],"import { createBrowserHistory, History } from 'history';\nexport const history = createBrowserHistory();","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.jsx",["127"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx",["128","129","130"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx",["131","132","133"],"import React, {FC, useEffect, useState} from 'react';\n\nimport {useParams} from \"react-router\";\nimport {getUserProfile, getUserReviews} from \"../services/user.service\";\nimport {User, UserProfile} from \"../model/User\";\n\n\n// on line 9 we pass in (prop) I'm going to delete it\nexport const CriticView: FC = () => {\n    // descructuring on objects.\n\n    // we get this info from the user ID (getUserProfile from userservices)\n    // i had userprofle wrapped in curly bracers and had it changed to square brackets\n    const [userProfile, setUserProfile] = useState<UserProfile>({} as UserProfile);\n\n    let id: number;\n    // @ts-ignore\n    ({id} = useParams());\n\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getUserProfile(id)\n            .then(response => {\n                setUserProfile(response.data);\n            });\n    }, []);\n\n    // useEffect( () => {\n    //     getMovie(id)\n    //         .then(response => {\n    //             console.log(response.data);\n    //             setMovie(response.data);\n    //         });\n    //     mnuiv\n    // }, []);\n\n    useEffect(() => {\n        getUserReviews(id)\n            .then(response => {\n                console.log(response.data);\n                // @ts-ignore\n                setReviews(response.data);\n            });\n    }, []);\n\n    // getUserReviews\n    // /users/id/reviews\n\n\n\n    return (\n            <div>\n                <div className=\"loginbgcolor\">\n                    <h1>Critic</h1>\n                </div>\n                <ol>\n                    {reviews.map(({movie, rating, writtenReview}) => {\n                        // @ts-ignore\n                        const {title} = movie;\n                        return (\n                            //currently this grabs movie ids that match with user id\n                            <li>\n                                <strong>Movie:{title}</strong>\n                                <br/>\n                                <strong>rating: {rating}</strong>\n                                <br/>\n                                <strong>written review: {writtenReview}</strong>\n                            </li>\n                        );\n                    })}\n                </ol>\n                <div>\n                    <p>ID: {userProfile.id}</p>\n                    <p>Name: {userProfile.displayName}</p>\n\n\n                </div>\n            </div>\n        );\n    };\n",["134","135"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts",["136"],"export const authHeader = () => {\n    // lets read the \"userAuth\" object from local storage.\n    // it contains basic information about the user, such as id, displayName, and accessToken\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n\n    if (userAuth && userAuth.accessToken) {\n        return {'authorization': userAuth.accessToken};\n    } else {\n        return {}\n    }\n}\n\n//local storage is so that data is still there when the page closes down\n//otherwise , if we did session storage the session would be lost upon a page closing down.\n\n// this helper function checks local storage for user item.\n\n// if a logged in user has an JWT, return HTTP authorization header.\n\n// otherwise return an empty object\n\n\n\n//*****************\n// why do we need line 6, where we have userAuth twice?","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx",["137"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const SignoutView: FC = () => {\n    const { setUser } = useContext(UserContext);\n\n    useEffect(() => {\n        // since <Header depends on user, calling setUser will cause the <Header> component to re-render.\n        setUser(undefined);\n        // this will clear localstorage\n        signout();\n        history.replace(\"/signin\");\n    }, []);\n\n    return <></>;\n}\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.jsx",["138"],"import React, {useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\n\nexport const LoginStateHandler = (props) => {\n    const {history} = props;\n\n    useEffect(() => {\n        if (history.location.pathname === '/signin') {\n            return;\n        }\n        if (history.location.pathname === '/signup') {\n            return;\n        }\n        if (history.location.pathname === '/signout') {\n            return;\n        }\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n        }\n\n    }, []);\n\n    return <></>;\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts",["139"],"export const getCurrentUserAuth = () =>  {\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n    return userAuth;\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["140"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getUsers} from \"../services/user.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {AxiosResponse} from \"axios\";\nimport {User} from \"../model/User\";\n\n// we are not making adds/deletes to he list, therefore we will set our list to a key named index ( the index of the item)\n// if we add/delete items  then index would not work. In that case we would need the item id number.\n\nexport const CriticList: FC = () => {\n    const { users, setUsers } = useContext(UserContext);\n\n    useEffect(() => {\n        getUsers()\n            .then((response: AxiosResponse<User[]>) => {\n                setUsers(response.data);\n            });\n\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Critic List</h1>\n            </div>\n            <div>\n                {users.map((user, index) => (\n                    <CriticUser key={index} user={user}/>\n                ))}\n            </div>\n        </div>\n\n    );\n};\n\ninterface CriticUserProps {\n    user: User;\n}\n// FC<CriticsUserProps> <-- this is called \"generics\", google \"typescript basic generics\" \"what is generics\"\nconst CriticUser: FC<CriticUserProps> = (props) => {\n    const { user } = props;\n    return (\n        <section>\n            <ul>\n\n                <li>\n                    user name: <p>{user.displayName}</p>\n                </li>\n\n                <li>\n                    profile: <Link to={`/critics/${user.id}`}>View Profile</Link>\n                </li>\n\n                <li>\n                    id :<p>{user.id}</p>\n                </li>\n\n            </ul>\n        </section>\n    );\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx",["141","142","143","144","145","146","147"],"import React, {useState, useRef, useContext, FC, MouseEvent, ChangeEvent} from \"react\";\n\n// import {isEmail} from \"validator\";\nimport {signin} from \"../services/auth.service\";\nimport {history} from '../browserHistory';\nimport {UserContext} from \"../services/user.context\";\nimport {SignInRequest} from \"../model/User\";\n\nconst required = (value: any) => {\n    if (!value) {\n        return (\n            <div>\n                <p>This field is required </p>\n            </div>\n        );\n    }\n};\n\nconst validEmail = (email: string) => {\n    return true;\n    // if (!isEmail(email)) {\n    //     return (\n    //         <div>\n    //             <p>This is not a valid email</p>\n    //         </div>\n    //     );\n    // }\n};\n\nconst validPassword = (password: string) => {\n    if (password.length < 8 || password.length > 20) {\n        return (\n            <div>\n                <p>Password must be between 8 and 20 characters</p>\n            </div>\n        );\n    }\n};\n\n// interface Props {\n//     user: User;\n//     setUser: (user: User) => void;\n// }\n// export const SigninView = props => { // same as with ()\nexport const SigninView: FC = () => {\n\n    const [signInRequest, setSignInRequest] = useState<SignInRequest>({} as SignInRequest);\n\n    const [loading, setLoading] = useState(false);\n\n    const [message, setMessage] = useState(\"\");\n\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n\n    const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\n        setSignInRequest({\n            ...signInRequest,\n            email: event.target.value\n        });\n\n        if (!event.target.value) {\n            setEmailError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setEmailError(\"Email must be 2 + characters\");\n\n        } else {\n            setEmailError(\"\");\n        }\n    };\n\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\n        setSignInRequest({\n            ...signInRequest,\n            password: event.target.value\n        });\n\n        if (!event.target.value) {\n            setPasswordError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setPasswordError(\"Password must be 2+ characters\");\n\n        } else {\n            setPasswordError(\"\");\n        }\n    };\n\n// should I put CreateUserRequest from user.ts?\n\n    const handleSignIn = () => {\n        setMessage(\"\");\n        setLoading(true);\n        // validate all something is up with this one\n        //form.current.validateAll();\n\n        // console.log(signInRequest);\n\n        signin(signInRequest).then(response => {\n            // check response for error;\n            history.push(\"/\");\n        }, (error: any) => {\n            const errorMessage = parseErrorMessageFromErrorResponse(error);\n\n            setLoading(false);\n            setMessage(errorMessage);\n        });\n    }\n\n    const parseErrorMessageFromErrorResponse = (error: any): string => {\n        return (error.response && error.response.data && error.response.data.message)\n            || error.message\n            || error.toString()\n    }\n\n    return (\n        <div>\n\n            <div className=\"loginbgcolor\">\n                <h1>Sign In</h1>\n            </div>\n\n            <div className=\"loginbox\">\n                {/* migrate away from onSubmit and forms and just have a button down blow with and onClick={handleSignin}*/}\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email: </label>\n                    {/*value={email} we took this out from inline input tag*/}\n                    <input type=\"text\" name=\"email\" onChange={onChangeEmail} className=\"form-control\"\n                        // validations={[required, validEmail]}\n                    />\n                    <p>{emailError}</p>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password: </label>\n                    <input type=\"password\" name=\"password\" className=\"form-control\" onChange={onChangePassword}/>\n                    <p> {passwordError}</p>\n                </div>\n\n                <div className=\"form-group\">\n                    <button onClick={handleSignIn} className=\"btn btn-primary btn-block\" disabled={loading}>\n                        {loading && (\n                            <span className=\"spinner-border spinner-border-sm\"/>\n                        )}\n                        <span>Sign In</span>\n                    </button>\n                </div>\n\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {message}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n\n};\n\n\n//auth.services line 29 what type should signinrequest be?\n//signinview lines 146 and 156 both havea  signin button, which should i keep?\n//signinview unused parameters on handle signin line 92\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx",["148"],"import React, {ChangeEvent, FC, useContext, useState} from 'react';\nimport {signup} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\n\nexport const SignupView = () => {\n    const {user, setUser} = useContext(UserContext);\n\n    const [emailError, setEmailError] = useState(\"\");\n    const [displayNameError, setDisplayNameError] = useState(\"\");\n\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n\n    // not fully sure on how to read all of this\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n        console.log('event.target.value =', event.target.value)\n        // @ts-ignore\n        setUser({\n            ...user,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const onChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange(event);\n        if (!event.target.value) {\n            setEmailError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setEmailError(\"Email must be 2 + characters\");\n\n        } else {\n            setEmailError(\"\");\n        }\n    };\n\n    const onChangeDisplayName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange(event);\n        if (!event.target.value) {\n            setDisplayNameError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setDisplayNameError(\"Email must be 2 + characters\");\n\n        } else {\n            setDisplayNameError(\"\");\n        }\n    };\n\n    const onChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange(event);\n        if (!event.target.value) {\n            setPasswordError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setPasswordError(\"Password must be 2+ characters\");\n\n        } else {\n            setPasswordError(\"\");\n        }\n    };\n\n    const onChangeConfirmPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange(event);\n        if (!event.target.value) {\n            setConfirmPasswordError(\"\");\n\n        } else { // @ts-ignore\n            if (event.target.value !== user.password) {\n\n                    } else {\n                        setConfirmPasswordError(\"\");\n                    }\n        }\n        // @ts-ignore\n        setUser({\n            ...user,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    // const handleCreateUser = () => {\n    //     // alert(\"don't forget to forward to user profile after creation!\")\n    //     createUser(user).then(response => {\n    //         alert(JSON.stringify(response.data));\n    //         setUser(response.data);\n    //     });\n    // };\n\n    const handleSignup = () => {\n        // @ts-ignore\n        signup(user.email, user.password, user.displayName).then(response => {\n            // check response for error;\n            history.push(\"/signin\");\n        });\n    }\n\n    return (\n        <div>\n\n            <div className=\"loginbgcolor\">\n                <h1>Sign Up</h1>\n            </div>\n\n            <div className={\"loginbox\"}>\n\n\n                <div>\n                    <label htmlFor=\"email\">Email: </label>\n                    <input type=\"text\" name=\"email\" onChange={onChangeEmail}/>\n                    <p>{emailError}</p>\n                </div>\n\n                <div>\n                    <label htmlFor=\"displayName\">Display Name: </label>\n                    <input type=\"text\" name=\"displayName\" onChange={onChangeDisplayName}/>\n                    <p>{displayNameError}</p>\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input type=\"password\" name=\"password\" onChange={onChangePassword}/>\n                    <p> {passwordError}</p>\n                </div>\n\n                <div>\n                    {/*I might need to change confirm password in htmlFor and name to password if it breaks.*/}\n                    <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n                    <input type=\"password\" name=\"confirmPassword\" onChange={onChangeConfirmPassword}/>\n                    <p>{confirmPasswordError}</p>\n                </div>\n\n                <button onClick={handleSignup}>\n                    Create User\n                </button>\n\n\n            </div>\n        </div>\n\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":30,"column":12,"nodeType":"155","messageId":"156","endLine":30,"endColumn":16},{"ruleId":"153","severity":1,"message":"157","line":36,"column":12,"nodeType":"155","messageId":"156","endLine":36,"endColumn":17},{"ruleId":"153","severity":1,"message":"158","line":36,"column":19,"nodeType":"155","messageId":"156","endLine":36,"endColumn":27},{"ruleId":"153","severity":1,"message":"159","line":38,"column":12,"nodeType":"155","messageId":"156","endLine":38,"endColumn":17},{"ruleId":"153","severity":1,"message":"160","line":38,"column":19,"nodeType":"155","messageId":"156","endLine":38,"endColumn":27},{"ruleId":"153","severity":1,"message":"161","line":46,"column":12,"nodeType":"155","messageId":"156","endLine":46,"endColumn":18},{"ruleId":"153","severity":1,"message":"162","line":46,"column":20,"nodeType":"155","messageId":"156","endLine":46,"endColumn":29},{"ruleId":"153","severity":1,"message":"163","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":23,"column":8,"nodeType":"166","endLine":23,"endColumn":10,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":51,"column":24,"nodeType":"170","endLine":51,"endColumn":76},{"ruleId":"168","severity":1,"message":"169","line":54,"column":24,"nodeType":"170","endLine":54,"endColumn":71},{"ruleId":"168","severity":1,"message":"169","line":57,"column":24,"nodeType":"170","endLine":57,"endColumn":76},{"ruleId":"168","severity":1,"message":"169","line":60,"column":24,"nodeType":"170","endLine":60,"endColumn":77},{"ruleId":"153","severity":1,"message":"171","line":1,"column":32,"nodeType":"155","messageId":"156","endLine":1,"endColumn":39},{"ruleId":"164","severity":1,"message":"172","line":44,"column":8,"nodeType":"166","endLine":44,"endColumn":10,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":9,"column":22,"nodeType":"155","messageId":"156","endLine":9,"endColumn":26},{"ruleId":"164","severity":1,"message":"176","line":52,"column":8,"nodeType":"166","endLine":52,"endColumn":10,"suggestions":"177"},{"ruleId":"164","severity":1,"message":"178","line":60,"column":8,"nodeType":"166","endLine":60,"endColumn":10,"suggestions":"179"},{"ruleId":"174","severity":1,"message":"180","line":5,"column":9,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"164","severity":1,"message":"178","line":27,"column":8,"nodeType":"166","endLine":27,"endColumn":10,"suggestions":"181"},{"ruleId":"164","severity":1,"message":"178","line":45,"column":8,"nodeType":"166","endLine":45,"endColumn":10,"suggestions":"182"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"183","severity":1,"message":"184","line":4,"column":33,"nodeType":"185","messageId":"186","endLine":4,"endColumn":73},{"ruleId":"164","severity":1,"message":"165","line":15,"column":8,"nodeType":"166","endLine":15,"endColumn":10,"suggestions":"187"},{"ruleId":"164","severity":1,"message":"188","line":21,"column":8,"nodeType":"166","endLine":21,"endColumn":10,"suggestions":"189"},{"ruleId":"183","severity":1,"message":"184","line":2,"column":33,"nodeType":"185","messageId":"186","endLine":2,"endColumn":73},{"ruleId":"164","severity":1,"message":"190","line":20,"column":8,"nodeType":"166","endLine":20,"endColumn":10,"suggestions":"191"},{"ruleId":"174","severity":1,"message":"192","line":1,"column":26,"nodeType":"155","messageId":"156","endLine":1,"endColumn":32},{"ruleId":"174","severity":1,"message":"193","line":1,"column":34,"nodeType":"155","messageId":"156","endLine":1,"endColumn":44},{"ruleId":"174","severity":1,"message":"194","line":1,"column":50,"nodeType":"155","messageId":"156","endLine":1,"endColumn":60},{"ruleId":"174","severity":1,"message":"195","line":6,"column":9,"nodeType":"155","messageId":"156","endLine":6,"endColumn":20},{"ruleId":"174","severity":1,"message":"196","line":9,"column":7,"nodeType":"155","messageId":"156","endLine":9,"endColumn":15},{"ruleId":"174","severity":1,"message":"197","line":19,"column":7,"nodeType":"155","messageId":"156","endLine":19,"endColumn":17},{"ruleId":"174","severity":1,"message":"198","line":30,"column":7,"nodeType":"155","messageId":"156","endLine":30,"endColumn":20},{"ruleId":"174","severity":1,"message":"199","line":1,"column":29,"nodeType":"155","messageId":"156","endLine":1,"endColumn":31},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'movie' is assigned a value but never used.","'setMovie' is assigned a value but never used.","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["202"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'History' is defined but never used.","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.",["203"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["205"],"'User' is defined but never used.",["206"],["207"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as",["208"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["210"],"'useRef' is defined but never used.","'useContext' is defined but never used.","'MouseEvent' is defined but never used.","'UserContext' is defined but never used.","'required' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.","'FC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"217","fix":"219"},{"desc":"217","fix":"220"},{"desc":"211","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [setUser]",{"range":"226","text":"227"},"Update the dependencies array to be: [setMovies]",{"range":"228","text":"229"},"Update the dependencies array to be: [id, setMovie]",{"range":"230","text":"231"},"Update the dependencies array to be: [id]",{"range":"232","text":"233"},{"range":"234","text":"233"},{"range":"235","text":"233"},{"range":"236","text":"227"},"Update the dependencies array to be: [history]",{"range":"237","text":"238"},"Update the dependencies array to be: [setUsers]",{"range":"239","text":"240"},[741,743],"[setUser]",[1083,1085],"[setMovies]",[1318,1320],"[id, setMovie]",[1548,1550],"[id]",[858,860],[1313,1315],[551,553],[535,537],"[history]",[758,760],"[setUsers]"]