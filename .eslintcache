[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.jsx":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.jsx":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.jsx":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.js":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.jsx":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.jsx":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.js":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.jsx":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.js":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.jsx":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.jsx":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.js":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.js":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"23"},{"size":1021,"mtime":1615861257836,"results":"24","hashOfConfig":"25"},{"size":3829,"mtime":1618273909818,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1611854984062,"results":"27","hashOfConfig":"25"},{"size":3417,"mtime":1618271333670,"results":"28","hashOfConfig":"25"},{"size":103,"mtime":1613513089166,"results":"29","hashOfConfig":"25"},{"size":1659,"mtime":1618298196337,"results":"30","hashOfConfig":"25"},{"size":2058,"mtime":1618364834805,"results":"31","hashOfConfig":"25"},{"size":1928,"mtime":1618281864222,"results":"32","hashOfConfig":"25"},{"size":1390,"mtime":1615840084907,"results":"33","hashOfConfig":"25"},{"size":4080,"mtime":1618270943724,"results":"34","hashOfConfig":"25"},{"size":5317,"mtime":1618270894265,"results":"35","hashOfConfig":"25"},{"size":1575,"mtime":1618365472910,"results":"36","hashOfConfig":"25"},{"size":806,"mtime":1615427110517,"results":"37","hashOfConfig":"25"},{"size":565,"mtime":1618271333642,"results":"38","hashOfConfig":"25"},{"size":1139,"mtime":1616551133698,"results":"39","hashOfConfig":"25"},{"size":2734,"mtime":1618273412293,"results":"40","hashOfConfig":"25"},{"size":1237,"mtime":1618281864229,"results":"41","hashOfConfig":"25"},{"size":560,"mtime":1615513150254,"results":"42","hashOfConfig":"25"},{"size":691,"mtime":1618271333675,"results":"43","hashOfConfig":"25"},{"size":133,"mtime":1616069676459,"results":"44","hashOfConfig":"25"},{"size":615,"mtime":1618348939660,"results":"45","hashOfConfig":"25"},{"size":1720,"mtime":1618366496653,"results":"46","hashOfConfig":"25"},{"size":672,"mtime":1618366191595,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"p37r31",{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.js",[],["105","106"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.js",["107","108","109","110","111","112","113"],"import React, {useState, useEffect} from 'react';\nimport {Route, Router, Switch} from \"react-router\";\nimport {history} from './browserHistory';\nimport {SigninView} from './views/SigninView';\nimport {SignupView} from './views/SignupView';\nimport {HomeView} from \"./views/HomeView\";\nimport {CriticList} from './views/CriticList';\nimport {CriticView} from './views/CriticView';\nimport {MovieList} from './views/MovieList';\nimport {MovieView} from './views/MovieView';\nimport {CreateReview} from './views/CreateReview';\nimport {LoginStateHandler} from './views/LoginStateHandler';\n\n\n// change up home view\n\nimport './App.scss';\nimport {SignoutView} from \"./views/SignoutView\";\nimport {Header} from \"./views/Header\";\nimport {ProfileView} from \"./views/ProfileView\";\nimport {getCurrentUserAuth} from \"./services/getCurrentUserAuth\";\nimport {getUser} from \"./services/user.service\";\nimport {UserContextProvider} from \"./services/user.context\";\nimport {MovieContextProvider} from \"./services/movie.context\";\n\n\nexport const App = () => {\n    // DELETE\n    // Should I include email for this or make a seperate user for register?\n    const [user, setUser] = useState({\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const [users, setUsers] = useState([]);\n\n    const [movie, setMovie] = useState({\n        title: \"\",\n        rating: \"\",\n        writtenReview: \"\",\n    });\n\n    //i put this in so that our critic list will display data\n\n    const [movies, setMovies] = useState([]);\n\n    // set user state with current logged in user, if needed\n    useEffect(() => {\n        const userAuth = getCurrentUserAuth();\n        if (userAuth != null) {\n            getUser(userAuth.id).then(authedUser => {\n                // console.log(authedUser);\n                setUser(authedUser.data);\n            });\n        }\n    }, []);\n\n    return (\n        <UserContextProvider>\n            <MovieContextProvider>\n                <Router history={history}>\n                    <div className=\"App\">\n\n                        <LoginStateHandler history={history}/>\n\n                        <Header history={history}/>\n\n                        <Switch>\n                            <Route exact path=\"/signin\">\n                                <SigninView />\n                            </Route>\n\n                            <Route exact path=\"/signup\">\n                                <SignupView />\n                            </Route>\n\n                            <Route exact path=\"/signout\">\n                                <SignoutView />\n                            </Route>\n\n                            <Route exact path=\"/\">\n                                <HomeView />\n                            </Route>\n\n                            <Route exact path=\"/profile\">\n                                <ProfileView />\n                            </Route>\n\n                            <Route exact path=\"/movies\">\n                                <MovieList />\n                            </Route>\n\n                            <Route exact path=\"/movies/:id\">\n                                <MovieView  />\n                            </Route>\n\n                            <Route exact path=\"/movie/:id/review\">\n                                <CreateReview  />\n                            </Route>\n\n                            <Route exact path=\"/critics\">\n                                <CriticList />\n                            </Route>\n\n                            <Route exact path=\"/critics/:id\">\n                                <CriticView />\n                            </Route>\n\n\n                        </Switch>\n\n                        {/*<footer />*/}\n                    </div>\n                </Router>\n            </MovieContextProvider>\n        </UserContextProvider>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.jsx",["114","115","116","117","118","119"],"import React, {useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {getUser} from \"../services/user.service\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const HomeView = () => {\n    const { setUser } = useContext(UserContext);;\n\n    useEffect(() => {\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n            return;\n        }\n\n        const currentUser = getCurrentUserAuth();\n        getUser(currentUser.id)\n            .then(response => {\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Home</h1>\n            </div>\n            <div>\n                <p>3 random movies here</p>\n                <p>Each movie will have a random review from our DB pop up</p>\n                <p>Each movie will have a review average based on the number of reviews it got</p>\n\n            </div>\n\n            <div>\n                <img className=\"movie-image\" src=\"https://deepfocusreview.com/wp-content/uploads/2016/12/aliens.jpg\"\n                     alt=\"\"/>\n                <p>This is where a random review is going to go!</p>\n                <p>This is where our review score will go based on the total amount of reviews. </p>\n                <p>I may include movies that have the most reviews pop up as well.</p>\n                <p>I could have multiple movie slots. One for most reviewed, one for best reviews and worst reviews\n                    as a couple of examples.</p>\n            </div>\n\n            <div>\n\n                <nav className=\"navbar navbar-light bg-info\">\n                    <h1>Like what you see? Connect with us on Social media!</h1>\n                    <p><a href=\"https://www.facebook.com/\" target=\"_blank\"><img\n                        src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/square-facebook-512.png\" height=\"60\"\n                        width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://twitter.com/\" target=\"_blank\"><img\n                        src=\"https://d1e2bohyu2u2w9.cloudfront.net/education/sites/default/files/product/twitter-product-image.png\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.linkedin.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRS4s3k1pIajgk3Rf-07CLW-WqbfKXE2VDXFA&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.pinterest.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEgxnwMTT4WrNoXdjQlJZE4Vxj1Gnd8v1OGg&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n\n                </nav>\n            </div>\n\n            <div>\n                <nav className=\"navbar navbar-light bg-secondary\">\n                    <div className=\"col-lg-12\">\n                        <h2>Contact us:</h2>\n\n                        <p>Phone: 777-8675-309</p>\n                        <p>Email: admin@tomrotten.com</p>\n                    </div>\n                </nav>\n            </div>\n\n\n        </div>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.js",["120"],"import { createBrowserHistory, History } from 'history';\nexport const history = createBrowserHistory();","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.jsx",["121","122"],"import React, {useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getAllMovies} from \"../services/movie.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {MovieContext} from \"../services/movie.context\";\n\n// ({ this is to return an object )}\n// this gets our movies list from an url and returns the data to the user\nexport const MovieList = () => {\n    const { movies, setMovies } = useContext(MovieContext);\n\n\n\n    useEffect(() => {\n        getAllMovies()\n            .then(response => {\n                console.log(response.data);\n                setMovies(response.data);\n            })\n\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Movies</h1>\n            </div>\n            <div>\n                {movies.map((movie, index) => (\n                    <SelectedMovie key={index} movie={movie} />\n                ))}\n            </div>\n        </div>\n\n    );\n};\n//check postman lets change url to inlcude url\nconst SelectedMovie = (props) => {\n    const movie = props.movie;\n\n    return(\n        <section>\n            <ul>\n                {/*this pulls from the movie_reviews model we still need to join both tables */}\n                <li>\n                    movie title: <p>{movie.title} {movie.id}</p>\n                </li>\n\n                <li>\n                    Check out full stats <Link to={`movies/${movie.id}`}>Movie stats</Link>\n                </li>\n\n            </ul>\n        </section>\n    );\n}\n\n// once we get both tables connected, movie title should be turned into a link tag\n// have the rating appear to the right of the title\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.jsx",["123","124","125","126"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport {getMovie, getMovieReviews} from \"../services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {getUsers} from \"../services/user.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {MovieContext} from \"../services/movie.context\";\n\n\nexport const MovieView = () => {\n    const {movie, setMovie} = useContext(MovieContext);\n\n    const {setUser} = useContext(UserContext);\n    const {id} = useParams();\n    const {userId} = useParams();\n\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getMovie(id)\n            .then(response => {\n                console.log(response.data);\n                setMovie(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getMovieReviews(id)\n            .then(response => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getUsers()\n            .then(response => {\n                console.log(response.data);\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Movie View</h1>\n            </div>\n            <div>\n\n                <Link to={`/movie/${movie.id}/review`}>Review Movie</Link>\n\n                <p>\n                    <strong>Ratings</strong>\n                    <ol>\n                        {reviews.map(review => (\n                            <li>\n                                <Link to={`/critics/${review.id}`}>\n                                    <strong>movie rating:{review.rating}</strong> - writtenReview:\n                                    \"{review.writtenReview}\" name of reviewer: {review.user.displayName}\n                                </Link>\n                            </li>\n\n\n                        ))}\n                    </ol>\n\n\n                </p>\n\n            </div>\n        </div>\n    );\n};","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.jsx",["127","128","129","130","131"],"import React, {useContext, useEffect, useState} from 'react';\n\nimport {useParams} from \"react-router\";\nimport {getUserProfile, getUserReviews} from \"../services/user.service\";\n\nimport {getMovie, getMovieReviews} from \"../services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {UserContext} from \"../services/user.context\";\n\nexport const CriticView = (props) => {\n    // descructuring on objects.\n    const { user, setUser } = useContext(UserContext);\n\n    const {id} = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getUserProfile(id)\n            .then(response => {\n                setUser(response.data);\n            });\n    }, []);\n\n    // useEffect( () => {\n    //     getMovie(id)\n    //         .then(response => {\n    //             console.log(response.data);\n    //             setMovie(response.data);\n    //         });\n    //\n    // }, []);\n\n    useEffect( () => {\n        getUserReviews(id)\n            .then(response => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    // getUserReviews\n    // /users/id/reviews\n\n    return (\n        <div>\n            <div className=\"loginbgcolor\">\n                <h1>Critic</h1>\n            </div>\n            <ol>\n                {reviews.map(review => (\n                    //currently this grabs movie ids that match with user id\n                    <li>\n                        <strong>Movie:{review.movie.title}</strong>\n                        <br/>\n                        <strong>rating: {review.rating}</strong>\n                        <br/>\n                        <strong>written review: {review.writtenReview}</strong>\n                    </li>\n                ))}\n            </ol>\n            <div>\n                <p>ID: {user.id}</p>\n                <p>Name: {user.displayName}</p>\n\n\n            </div>\n        </div>\n    );\n};\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.jsx",["132","133","134","135","136"],"import React, {useState, useRef, useContext} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport {isEmail} from \"validator\";\nimport {signin} from \"../services/auth.service\";\nimport {history} from '../browserHistory';\n// import {} from \"../services/auth.service\";\nimport {Link} from 'react-router-dom';\nimport {UserContext} from \"../services/user.context\";\n// import AuthService from \"../services/auth.service\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div>\n                <p>This field is required </p>\n            </div>\n        );\n    }\n};\n\nconst validEmail = (value) => {\n    if (!isEmail(value)) {\n        return (\n            <div>\n                <p>This is not a valid email</p>\n            </div>\n        );\n    }\n};\n\nconst validPassword = (value) => {\n    if (value.length < 8 || value.length > 20) {\n        return (\n            <div>\n                <p>Password must be between 8 and 20 characters</p>\n            </div>\n        );\n    }\n};\n\n// interface Props {\n//     user: User;\n//     setUser: (user: User) => void;\n// }\n// export const SigninView = props => { // same as with ()\nexport const SigninView = () => {\n    const { user, setUser } = useContext(UserContext);\n\n    const form = useRef();\n    const checkBtn = useRef();\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const [email, setEmail] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n\n\n    const onChange = event => {\n        console.log('event.target.value =', event.target.value)\n        setUser({\n            ...user,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const onChangeEmail = (event) => {\n        onChange(event);\n        if (!event.target.value) {\n            setEmailError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setEmailError(\"Email must be 2 + characters\");\n\n        } else {\n            setEmailError(\"\");\n        }\n    };\n\n    const onChangePassword = (event) => {\n        onChange(event);\n        if (!event.target.value) {\n            setPasswordError(\"\");\n\n        } else if (event.target.value.length < 2) {\n            setPasswordError(\"Password must be 2+ characters\");\n\n        } else {\n            setPasswordError(\"\");\n        }\n    };\n\n    const handleSignin2 = (event) => {\n        event.preventDefault();\n        setMessage(\"\");\n        form.current.validateAll();\n\n    }\n\n    const handleSignin = (event) => {\n        event.preventDefault();\n        setMessage(\"\");\n        setLoading(true);\n\n        // validate all something is up with this one\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            signin(user.email, user.password).then(response => {\n                // check response for error;\n                history.push(\"/\");\n            }, (error) => {\n                const resMessage =\n                    (error.response && error.response.date &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setLoading(false);\n                setMessage(resMessage);\n            });\n        }\n\n        // axios.get(\"http://localhost:7777/)\", user);\n    }\n\n    return (\n        <div>\n\n            <div className=\"loginbgcolor\">\n                <h1>Sign In</h1>\n            </div>\n\n            <div className=\"loginbox\">\n                <Form onSubmit={handleSignin} ref={form}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email: </label>\n                        {/*value={email} we took this out from inline input tag*/}\n                        <Input type=\"text\" name=\"email\" onChange={onChangeEmail} className=\"form-control\"\n                               validations={[required, validEmail]}/>\n                        <p>{emailError}</p>\n                    </div>\n\n                    <div className=\"for/?m-group\">\n                        <label htmlFor=\"password\">Password: </label>\n                        <input type=\"password\" name=\"password\" className=\"form-control\" onChange={onChangePassword} r/>\n                        <p> {passwordError}</p>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                            {loading && (\n                                <span className=\"spinner-border spinner-border-sm\"></span>\n                            )}\n                            <span>Sign In</span>\n                        </button>\n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\n                </Form>\n            </div>\n        </div>\n    )\n\n};\n\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],["137","138"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.jsx",["139"],"import React, {useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {history} from \"../browserHistory\";\nimport {UserContext} from \"../services/user.context\";\n\nexport const SignoutView = () => {\n    const { setUser } = useContext(UserContext);\n\n    useEffect(() => {\n        // since <Header depends on user, calling setUser will cause the <Header> component to re-render.\n        setUser(null);\n        // this will clear localstorage\n        signout();\n        history.replace(\"/signin\");\n    }, []);\n\n    return <></>;\n}\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.jsx",["140"],"import React, {useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\n\nexport const LoginStateHandler = (props) => {\n    const {history} = props;\n\n    useEffect(() => {\n        if (history.location.pathname === '/signin') {\n            return;\n        }\n        if (history.location.pathname === '/signup') {\n            return;\n        }\n        if (history.location.pathname === '/signout') {\n            return;\n        }\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n        }\n\n    }, []);\n\n    return <></>;\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.jsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["141"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":30,"column":12,"nodeType":"148","messageId":"149","endLine":30,"endColumn":16},{"ruleId":"146","severity":1,"message":"150","line":36,"column":12,"nodeType":"148","messageId":"149","endLine":36,"endColumn":17},{"ruleId":"146","severity":1,"message":"151","line":36,"column":19,"nodeType":"148","messageId":"149","endLine":36,"endColumn":27},{"ruleId":"146","severity":1,"message":"152","line":38,"column":12,"nodeType":"148","messageId":"149","endLine":38,"endColumn":17},{"ruleId":"146","severity":1,"message":"153","line":38,"column":19,"nodeType":"148","messageId":"149","endLine":38,"endColumn":27},{"ruleId":"146","severity":1,"message":"154","line":46,"column":12,"nodeType":"148","messageId":"149","endLine":46,"endColumn":18},{"ruleId":"146","severity":1,"message":"155","line":46,"column":20,"nodeType":"148","messageId":"149","endLine":46,"endColumn":29},{"ruleId":"146","severity":1,"message":"156","line":2,"column":9,"nodeType":"148","messageId":"149","endLine":2,"endColumn":13},{"ruleId":"157","severity":1,"message":"158","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":51,"column":24,"nodeType":"163","endLine":51,"endColumn":76},{"ruleId":"161","severity":1,"message":"162","line":54,"column":24,"nodeType":"163","endLine":54,"endColumn":71},{"ruleId":"161","severity":1,"message":"162","line":57,"column":24,"nodeType":"163","endLine":57,"endColumn":76},{"ruleId":"161","severity":1,"message":"162","line":60,"column":24,"nodeType":"163","endLine":60,"endColumn":77},{"ruleId":"146","severity":1,"message":"164","line":1,"column":32,"nodeType":"148","messageId":"149","endLine":1,"endColumn":39},{"ruleId":"146","severity":1,"message":"165","line":4,"column":9,"nodeType":"148","messageId":"149","endLine":4,"endColumn":20},{"ruleId":"157","severity":1,"message":"166","line":21,"column":8,"nodeType":"159","endLine":21,"endColumn":10,"suggestions":"167"},{"ruleId":"146","severity":1,"message":"168","line":15,"column":12,"nodeType":"148","messageId":"149","endLine":15,"endColumn":18},{"ruleId":"157","severity":1,"message":"169","line":25,"column":8,"nodeType":"159","endLine":25,"endColumn":10,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"171","line":33,"column":8,"nodeType":"159","endLine":33,"endColumn":10,"suggestions":"172"},{"ruleId":"157","severity":1,"message":"158","line":41,"column":8,"nodeType":"159","endLine":41,"endColumn":10,"suggestions":"173"},{"ruleId":"146","severity":1,"message":"174","line":6,"column":9,"nodeType":"148","messageId":"149","endLine":6,"endColumn":17},{"ruleId":"146","severity":1,"message":"175","line":6,"column":19,"nodeType":"148","messageId":"149","endLine":6,"endColumn":34},{"ruleId":"146","severity":1,"message":"156","line":7,"column":9,"nodeType":"148","messageId":"149","endLine":7,"endColumn":13},{"ruleId":"157","severity":1,"message":"176","line":22,"column":8,"nodeType":"159","endLine":22,"endColumn":10,"suggestions":"177"},{"ruleId":"157","severity":1,"message":"171","line":39,"column":8,"nodeType":"159","endLine":39,"endColumn":10,"suggestions":"178"},{"ruleId":"146","severity":1,"message":"156","line":9,"column":9,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"179","line":33,"column":7,"nodeType":"148","messageId":"149","endLine":33,"endColumn":20},{"ruleId":"146","severity":1,"message":"180","line":56,"column":12,"nodeType":"148","messageId":"149","endLine":56,"endColumn":17},{"ruleId":"146","severity":1,"message":"181","line":56,"column":19,"nodeType":"148","messageId":"149","endLine":56,"endColumn":27},{"ruleId":"146","severity":1,"message":"182","line":95,"column":11,"nodeType":"148","messageId":"149","endLine":95,"endColumn":24},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"157","severity":1,"message":"158","line":15,"column":8,"nodeType":"159","endLine":15,"endColumn":10,"suggestions":"183"},{"ruleId":"157","severity":1,"message":"184","line":21,"column":8,"nodeType":"159","endLine":21,"endColumn":10,"suggestions":"185"},{"ruleId":"157","severity":1,"message":"186","line":20,"column":8,"nodeType":"159","endLine":20,"endColumn":10,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'movie' is assigned a value but never used.","'setMovie' is assigned a value but never used.","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["190"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'History' is defined but never used.","'UserContext' is defined but never used.","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.",["191"],"'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["192"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["193"],["194"],"'getMovie' is defined but never used.","'getMovieReviews' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'setUser'. Either include them or remove the dependency array.",["195"],["196"],"'validPassword' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'handleSignin2' is assigned a value but never used.",["197"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["198"],"React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"200","fix":"208"},{"desc":"209","fix":"210"},{"desc":"206","fix":"211"},{"desc":"200","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [setUser]",{"range":"217","text":"218"},"Update the dependencies array to be: [setMovies]",{"range":"219","text":"220"},"Update the dependencies array to be: [id, setMovie]",{"range":"221","text":"222"},"Update the dependencies array to be: [id]",{"range":"223","text":"224"},{"range":"225","text":"218"},"Update the dependencies array to be: [id, setUser]",{"range":"226","text":"227"},{"range":"228","text":"224"},{"range":"229","text":"218"},"Update the dependencies array to be: [history]",{"range":"230","text":"231"},"Update the dependencies array to be: [setUsers]",{"range":"232","text":"233"},[741,743],"[setUser]",[651,653],"[setMovies]",[807,809],"[id, setMovie]",[1005,1007],"[id]",[1191,1193],[691,693],"[id, setUser]",[1107,1109],[538,540],[535,537],"[history]",[758,760],"[setUsers]"]