[{"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx":"1","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js":"2","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx":"3","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx":"4","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx":"5","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts":"6","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts":"7","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts":"8","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx":"9","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts":"10","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx":"11","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx":"12","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx":"13","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx":"14","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts":"15","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx":"16","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx":"17","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx":"18","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx":"19","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx":"20","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx":"21","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx":"22","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx":"23","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts":"24"},{"size":1025,"mtime":1619678374908,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611854984062,"results":"27","hashOfConfig":"26"},{"size":2066,"mtime":1619684150068,"results":"28","hashOfConfig":"26"},{"size":3479,"mtime":1619685461876,"results":"29","hashOfConfig":"26"},{"size":3365,"mtime":1620199543418,"results":"30","hashOfConfig":"26"},{"size":1425,"mtime":1619317188648,"results":"31","hashOfConfig":"26"},{"size":1618,"mtime":1619317233779,"results":"32","hashOfConfig":"26"},{"size":814,"mtime":1619056559449,"results":"33","hashOfConfig":"26"},{"size":747,"mtime":1619684799457,"results":"34","hashOfConfig":"26"},{"size":1394,"mtime":1619317128037,"results":"35","hashOfConfig":"26"},{"size":5010,"mtime":1620174920032,"results":"36","hashOfConfig":"26"},{"size":2985,"mtime":1619684524531,"results":"37","hashOfConfig":"26"},{"size":1411,"mtime":1619685070442,"results":"38","hashOfConfig":"26"},{"size":1186,"mtime":1619684120756,"results":"39","hashOfConfig":"26"},{"size":141,"mtime":1619056559394,"results":"40","hashOfConfig":"26"},{"size":2176,"mtime":1619684208126,"results":"41","hashOfConfig":"26"},{"size":716,"mtime":1619314283053,"results":"42","hashOfConfig":"26"},{"size":5824,"mtime":1620180180579,"results":"43","hashOfConfig":"26"},{"size":5868,"mtime":1620073734551,"results":"44","hashOfConfig":"26"},{"size":696,"mtime":1619315028249,"results":"45","hashOfConfig":"26"},{"size":431,"mtime":1619321664113,"results":"46","hashOfConfig":"26"},{"size":2979,"mtime":1619685368481,"results":"47","hashOfConfig":"26"},{"size":3328,"mtime":1619684066792,"results":"48","hashOfConfig":"26"},{"size":94,"mtime":1619683655731,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"p37r31",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/index.jsx",[],["111","112"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/reportWebVitals.js",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieList.tsx",["113","114"],"import React, {useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getAllMovies} from \"../services/movie.service\";\nimport {MovieContext} from \"../services/movie.context\";\nimport {ViewHeader} from \"./ViewHeader\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {Movie} from \"../model/Movie\";\n\nconst StyledMovieListDiv = styled.div`\n  // & means \"this\"\n  &.movie-list {\n    max-width: 800px;\n    margin: auto;\n\n    .movies {\n      .movie {\n        height: 200px;\n\n        .movie-paper {\n          height: 100%;\n\n          &:hover {\n            background-color: #eee;\n          }\n        }\n      }\n    }\n  }\n`;\n\n// ({ this is to return an object )}\n// this gets our movies list from an url and returns the data to the user\nexport const MovieList = () => {\n    const {movies, setMovies} = useContext(MovieContext);\n\n    useEffect(() => {\n        getAllMovies()\n            .then(response => {\n                // console.log(\"movies\")\n                // console.log(response.data);\n                setMovies(response.data);\n            })\n\n    }, []);\n    return (\n        <StyledMovieListDiv className=\"movie-list\">\n            <Grid container spacing={1} direction=\"row\" className=\"movies\">\n                {movies.map((movie, index) => (\n                    <MovieView key={index} movie={movie}/>\n                ))}\n            </Grid>\n        </StyledMovieListDiv>\n    );\n};\n//check postman lets change url to inlcude url\nconst MovieView = (props: { movie: Movie; }) => {\n    const {movie} = props;\n\n    return (\n        <Grid item xs={12} sm={6} md={3} className=\"movie\">\n            <Link to={`movies/${movie.id}`}>\n                <Paper elevation={3} className=\"movie-paper\">\n                    <div>\n                        <h2>{movie.title}</h2>\n                    </div>\n                </Paper>\n            </Link>\n        </Grid>\n    );\n}\n\n// once we get both tables connected, movie title should be turned into a link tag\n// have the rating appear to the right of the title\n\n",["115","116"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/MovieView.tsx",["117","118","119"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport {getMovie, getMovieReviews} from \"services/movie.service\";\nimport {Link} from 'react-router-dom';\nimport {MovieContext} from \"services/movie.context\";\nimport {Movie, MovieReview} from \"model/Movie\";\nimport {AxiosResponse} from \"axios\";\nimport styled from \"styled-components\";\nimport {Box, Button, Paper} from \"@material-ui/core\";\n\nconst MovieViewDiv = styled.div`\n  &.movie-view {\n    max-width: 800px;\n    margin: auto;\n\n    .average-rating {\n      font-size: 18px;\n      font-weight: bold;\n    }\n\n    .leave-review-button {\n      font-size: 18px;\n    }\n\n    .movie-reviews {\n      .movie-review {\n        &:hover {\n          background-color: #eee;\n        }\n      }\n    }\n  }\n`;\n\nexport const MovieView = () => {\n    const {movie, setMovie} = useContext(MovieContext);\n\n    // @ts-ignore\n    const {id} = useParams();\n    // const {userId} = useParams();\n\n    const [reviews, setReviews] = useState<MovieReview[]>([]);\n\n    useEffect(() => {\n        getMovie(id)\n            .then((response: AxiosResponse<Movie>) => {\n                console.log(response.data);\n                setMovie(response.data);\n            });\n    }, []);\n\n    useEffect(() => {\n        getMovieReviews(id)\n            .then((response: AxiosResponse<MovieReview[]>) => {\n                console.log(response.data);\n                setReviews(response.data);\n            });\n    }, []);\n\n    // this is an \"expensive\" computation, in future every time a user calls\n    // PATCH /movies/{id}/review, we wil update review count and average review for\n    // the movie so that the client doesn't have to calculate this\n    const ratingSum: number = reviews\n        .map((review: MovieReview) => review.rating) // map MovieReview[] to number[]\n        .reduce((rating1: number, rating2: number) => rating1 + rating2, 0);\n\n    // ternary operator, short-hand for 'if () {} else {}'\n    const averageRating = reviews.length > 0\n        ? (ratingSum / reviews.length)\n        : 0;\n\n    return (\n        <MovieViewDiv className=\"movie-view\">\n            <div className=\"average-rating\">\n                average rating: {averageRating} / 10\n            </div>\n            <Box m=\"10px\">\n                <Button\n                    className=\"leave-review-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    href={`/movies/${id}/review`}\n                >\n                    Leave Review\n                </Button>\n            </Box>\n\n            <Box className=\"movie-reviews\">\n                {reviews\n                    .sort((a: MovieReview, b: MovieReview) => {\n                        return b.id - a.id;\n                    })\n                    .map((review: MovieReview, i: number) => (\n                    <Paper key={i} className=\"movie-review\" elevation={3}>\n                        <Link to={`/critics/${review.user.id}`}>\n                            <strong>rating: {review.rating}</strong>\n                            <p>review: {review.writtenReview}</p>\n                            {review.user.displayName ? (\n                                <p>by {review.user.displayName}</p>\n                            ) : (\n                                <p>by: anonymous</p>\n                            )}\n                        </Link>\n                    </Paper>\n                ))}\n            </Box>\n        </MovieViewDiv>\n\n    );\n};","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticView.tsx",["120","121","122","123"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/auth.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/authHeader.ts",["124"],"export const authHeader = () => {\n    // lets read the \"userAuth\" object from local storage.\n    // it contains basic information about the user, such as id, displayName, and accessToken\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n\n    if (userAuth && userAuth.accessToken) {\n        return {'authorization': userAuth.accessToken};\n    } else {\n        return {}\n    }\n}\n\n//local storage is so that data is still there when the page closes down\n//otherwise , if we did session storage the session would be lost upon a page closing down.\n\n// this helper function checks local storage for user item.\n\n// if a logged in user has an JWT, return HTTP authorization header.\n\n// otherwise return an empty object\n\n\n\n//*****************\n// why do we need line 6, where we have userAuth twice?","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignoutView.tsx",["125","126"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {signout} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessSignoutView: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        // since <Header depends on user, calling setUser will cause the <Header> component to re-render.\n        setUser(undefined);\n        // this will clear localstorage\n        signout();\n        history.replace(\"/signin\");\n    }, []);\n\n    return null;\n}\n\nexport const SignoutView = withRouter(RouterlessSignoutView);\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.service.ts",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CreateReview.tsx",["127","128"],"import React, {FC, useContext, useState} from 'react';\nimport {RouteComponentProps, useParams} from \"react-router\";\nimport {updateMovieReview} from \"services/movie.service\";\nimport {UserContext} from \"services/user.context\";\nimport {withRouter} from \"react-router-dom\";\nimport {MovieReviewUpdateRequest} from \"model/Movie\";\nimport {User} from 'model/User';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport styled from \"styled-components\";\nimport {Box, Button, FormControl, InputLabel, MenuItem, Select, TextareaAutosize, TextField} from \"@material-ui/core\";\n\n\nconst CreateReviewDiv = styled.div`\n  &.create-review {\n    display: flex;\n    flex-flow: column nowrap;;\n    justify-content: center;\n    align-items: center;\n\n    .title-row {\n      display: flex;\n      flex-flow: row nowrap;;\n      justify-content: center;\n      align-items: center;\n      margin: 10px;\n\n      .chat-box-icon {\n        margin: 2px;\n      }\n\n      .title-text {\n        margin: 2px;\n        font-size: 18px;\n      }\n    }\n\n    // a general css rule to add margin around all form-controls\n    .MuiFormControl-root {\n      margin: 5px;\n    }\n\n    // css specific to rating select input\n    .rating-form-control {\n      min-width: 120px;\n      margin: 2px;\n    }\n\n    // css specific to review text input\n    .review-form-control {\n      .MuiFormControl-root {\n        width: 400px;\n      }\n    }\n  }\n`;\n\ninterface CreateReviewParams {\n    id: string;\n}\n\nconst RouterlessCreateReview: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {user} = useContext(UserContext);\n    const [rating, setRating] = useState<number>();\n\n    const [writtenReview, setWrittenReview] = useState(\"\");\n\n    const {id: movieIdString} = useParams<CreateReviewParams>(); // rename url id to movie id\n    const movieId = Number(movieIdString);\n\n    const onSubmit = () => {\n        if (!user) {\n            alert(\"no user logged in\");\n            return\n        }\n\n        const currentUser: User = user!;\n\n        // check to force user to select a rating\n        if (!rating) {\n            alert(\"Please select a rating\");\n            return;\n        }\n        // if no user is logged in\n        if (!currentUser.id) {\n            alert(\"Please login, user id is null\");\n            return;\n        }\n\n        // pass in review next to rating\n        const request: MovieReviewUpdateRequest = {\n            userId: currentUser.id,\n            movieId: movieId,\n            rating: rating,\n            writtenReview: writtenReview\n        };\n        updateMovieReview(request).then(newReview => {\n            console.log(\"created movie review:\")\n            console.log(newReview);\n            history.push(`/movies/${movieId}`);\n        });\n    };\n\n\n    return (\n        <CreateReviewDiv className=\"create-review\">\n            <div className=\"title-row\">\n                <ChatIcon className=\"chat-box-icon\"/>\n                <div className=\"title-text\">Your rating of this movie</div>\n            </div>\n\n            <FormControl variant=\"outlined\" className=\"rating-form-control\">\n                <InputLabel htmlFor=\"rating-input\">Rating</InputLabel>\n                <Select\n                    key=\"Rating\"\n                    id=\"rating-input\"\n                    value={rating}\n                    onChange={(event) => setRating(Number(event.target.value))}\n                    label=\"Rating\"\n                >\n                    <MenuItem value=\"\">Select Rating (1 low - 10 high)</MenuItem>\n                    <MenuItem value={10}>10</MenuItem>\n                    <MenuItem value={9}>9</MenuItem>\n                    <MenuItem value={8}>8</MenuItem>\n                    <MenuItem value={7}>7</MenuItem>\n                    <MenuItem value={6}>6</MenuItem>\n                    <MenuItem value={5}>5</MenuItem>\n                    <MenuItem value={4}>4</MenuItem>\n                    <MenuItem value={3}>3</MenuItem>\n                    <MenuItem value={2}>2</MenuItem>\n                    <MenuItem value={1}>1</MenuItem>\n                </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" className=\"review-form-control\">\n                <TextField\n                    id=\"review-label\"\n                    label=\"Review\"\n                    name=\"review\"\n                    multiline={true}\n                    onChange={(event) => setWrittenReview(event.target.value)}\n                    value={writtenReview}\n                    variant=\"outlined\"\n                />\n            </FormControl>\n\n            <FormControl className=\"review-submit-button\">\n                <Button\n                    name=\"rating\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onSubmit}\n                    disabled={rating == null}\n                >\n                    Leave Review\n                </Button>\n            </FormControl>\n        </CreateReviewDiv>\n    );\n};\n\nexport const CreateReview = withRouter(RouterlessCreateReview);","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/Header.tsx",["129","130"],"import React, {FC, useContext} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {UserContext} from \"../services/user.context\";\nimport styled from \"styled-components\";\nimport {RouteComponentProps} from \"react-router\";\nimport clsx from \"clsx\";\n\n// This will create a header on every page including our login/reg page\n\n\nconst StyleHeaderDiv = styled.div`\n  &.top-header {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n\n    .links {\n      width: 100%;\n      height: 100%;\n      max-width: 800px;\n      background-color: #eee;\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: flex-end;\n      align-items: center;\n\n      .link {\n        margin: 10px;\n        height: 100%;\n        line-height: 50px; // set line-height = height of container (50px) and this will vertically center text.\n        &:hover {\n          border-bottom: 2px solid black;\n        }\n      }\n\n      .selected {\n        border-bottom: 2px solid black;\n      }\n    }\n\n    a,\n    a:visited,\n    a:hover {\n      text-decoration: none;\n      color: black;\n    }\n  }\n`;\n\nconst RouterlessHeader: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {user} = useContext(UserContext);\n\n    const pathname = history.location.pathname;\n\n    if (isLoggedIn() && user != null) {\n        return (\n            <StyleHeaderDiv className=\"top-header\">\n                <div className=\"links\">\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/critics') && 'selected')}\n                        to=\"/critics\"\n                    >\n                        Critics\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/movies') && 'selected')}\n                        to=\"/movies\"\n                    >\n                        Movies\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname === '/' && 'selected')}\n                        to=\"/\"\n                    >\n                        Home\n                    </Link>\n                    <Link\n                        className={clsx(\"link\", pathname.startsWith('/profile') && 'selected')}\n                        to=\"/profile\"\n                    >\n                        {user.displayName || user.email || 'Profile'}\n                    </Link>\n                </div>\n            </StyleHeaderDiv>\n        );\n    }\n    return (\n        <StyleHeaderDiv className=\"top-header\">\n            <div className=\"links\">\n                <Link className={clsx(\"link\", pathname === '/signin' && 'selected')} to={\"/signin\"}>Sign In</Link>\n                <Link className={clsx(\"link\", pathname === '/signup' && 'selected')} to={\"/signup\"}>Sign Up</Link>\n            </div>\n        </StyleHeaderDiv>\n    )\n}\n\nexport const Header = withRouter(RouterlessHeader);\n\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/LoginStateHandler.tsx",["131","132","133"],"import React, {FC, useContext, useEffect} from 'react';\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {getUser} from \"../services/user.service\";\nimport {RouteComponentProps} from \"react-router\";\nimport {withRouter} from \"react-router-dom\";\n\nconst RouterlessLoginStateHandler: FC<RouteComponentProps> = (props) => {\n    const {history} = props;\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        if (history.location) {\n            if (history.location.pathname === '/signin') {\n                return;\n            }\n            if (history.location.pathname === '/signup') {\n                return;\n            }\n            if (history.location.pathname === '/signout') {\n                return;\n            }\n        }\n\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n        }\n\n    }, []);\n\n    // set user state with current logged in user, if needed\n    useEffect(() => {\n        const userAuth = getCurrentUserAuth();\n        if (userAuth != null) {\n            getUser(userAuth.id).then(authedUser => {\n                // console.log(authedUser);\n                setUser(authedUser.data);\n            });\n        }\n    }, []);\n\n    return null;\n}\n\nexport const LoginStateHandler = withRouter(RouterlessLoginStateHandler);","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ProfileView.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/getCurrentUserAuth.ts",["134"],"export const getCurrentUserAuth = () =>  {\n    const userAuth = JSON.parse(<string>localStorage.getItem(\"userAuth\"));\n    return userAuth;\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/CriticList.tsx",["135","136","137"],"import React, {FC, useContext, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {getUsers} from \"../services/user.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {AxiosResponse} from \"axios\";\nimport {User} from \"../model/User\";\nimport {Box, Paper} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {ViewHeader} from \"./ViewHeader\";\n\n// we are not making adds/deletes to he list, therefore we will set our list to a key named index ( the index of the item)\n// if we add/delete items  then index would not work. In that case we would need the item id number.\n\n\nconst CriticListDiv = styled.div`\n  &.critic-view {\n    max-width: 800px;\n    margin: auto;\n    background-color: #eeeeee;\n  }\n\n  .critic-list {\n    margin: 10px;\n\n  }\n\n  ul li {\n    margin: auto;\n    list-style-type: none;\n    color: red;\n    margin-right: 37px;\n  }\n\n`;\n\nexport const CriticList: FC = () => {\n    const {users, setUsers} = useContext(UserContext);\n\n    useEffect(() => {\n        getUsers()\n            .then((response: AxiosResponse<User[]>) => {\n                setUsers(response.data);\n            });\n\n    }, []);\n\n    return (\n        <CriticListDiv className=\"critic-view\">\n            <div>\n                {users.map((user, index) => (\n                    <CriticUser key={index} user={user}/>\n                ))}\n            </div>\n        </CriticListDiv>\n    );\n};\n\ninterface CriticUserProps {\n    user: User;\n}\n\n// FC<CriticsUserProps> <-- this is called \"generics\", google \"typescript basic generics\" \"what is generics\"\nconst CriticUser: FC<CriticUserProps> = (props) => {\n    const {user} = props;\n    return (\n        <CriticListDiv className=\"critic-view\">\n            <Paper className=\"critic-list\">\n                <section>\n                    <ul>\n\n                        <li>\n                            <p>{user.displayName}</p>\n                        </li>\n\n                        <li>\n                            <Link to={`/critics/${user.id}`}>View Profile</Link>\n                        </li>\n\n\n                    </ul>\n                </section>\n            </Paper>\n        </CriticListDiv>\n    );\n}","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/user.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SigninView.tsx",["138","139","140","141","142"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/SignupView.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/services/movie.context.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/ViewHeader.tsx",[],["143","144"],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/App.tsx",[],"/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/views/HomeView.tsx",["145","146","147","148","149","150"],"import React, {useContext, useEffect} from 'react';\n\nimport {getUser} from \"../services/user.service\";\nimport {getCurrentUserAuth} from \"../services/getCurrentUserAuth\";\nimport {isLoggedIn} from \"../services/auth.service\";\nimport {UserContext} from \"../services/user.context\";\nimport {ViewHeader} from \"./ViewHeader\";\nimport {history} from \"../browserHistory\";\n\nexport const HomeView = () => {\n    const {setUser} = useContext(UserContext);\n\n    useEffect(() => {\n        if (!isLoggedIn()) {\n            history.replace(\"/signin\");\n            return;\n        }\n\n        const currentUser = getCurrentUserAuth();\n        getUser(currentUser.id)\n            .then(response => {\n                setUser(response.data);\n            });\n    }, []);\n\n    return (\n        <div>\n            {/*<ViewHeader text=\"Home\" />*/}\n            <div>\n                <p>3 random movies here</p>\n                <p>Each movie will have a random review from our DB pop up</p>\n                <p>Each movie will have a review average based on the number of reviews it got</p>\n\n            </div>\n\n            <div>\n                <img className=\"movie-image\" src=\"https://deepfocusreview.com/wp-content/uploads/2016/12/aliens.jpg\"\n                     alt=\"\"/>\n                <p>This is where a random review is going to go!</p>\n                <p>This is where our review score will go based on the total amount of reviews. </p>\n                <p>I may include movies that have the most reviews pop up as well.</p>\n                <p>I could have multiple movie slots. One for most reviewed, one for best reviews and worst reviews\n                    as a couple of examples.</p>\n            </div>\n\n            <div>\n\n                <nav className=\"navbar navbar-light bg-info\">\n                    <h1>Like what you see? Connect with us on Social media!</h1>\n                    <p><a href=\"https://www.facebook.com/\" target=\"_blank\"><img\n                        src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/square-facebook-512.png\" height=\"60\"\n                        width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://twitter.com/\" target=\"_blank\"><img\n                        src=\"https://d1e2bohyu2u2w9.cloudfront.net/education/sites/default/files/product/twitter-product-image.png\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.linkedin.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRS4s3k1pIajgk3Rf-07CLW-WqbfKXE2VDXFA&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n                    <p><a href=\"https://www.pinterest.com/\" target=\"_blank\"><img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEgxnwMTT4WrNoXdjQlJZE4Vxj1Gnd8v1OGg&usqp=CAU&ec=45761791\"\n                        height=\"60\" width=\"60\" alt=\"\"/></a></p>\n\n                </nav>\n            </div>\n\n            <div>\n                <nav className=\"navbar navbar-light bg-secondary\">\n                    <div className=\"col-lg-12\">\n                        <h2>Contact us:</h2>\n\n                        <p>Phone: 777-8675-309</p>\n                        <p>Email: admin@tomrotten.com</p>\n                    </div>\n                </nav>\n            </div>\n\n\n        </div>\n    );\n}\n","/Users/steven/Documents/codingDojo/Mern/tomrotten/client/src/browserHistory.ts",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":5,"column":9,"nodeType":"157","messageId":"158","endLine":5,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":45,"column":8,"nodeType":"161","endLine":45,"endColumn":10,"suggestions":"162"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"163","line":36,"column":12,"nodeType":"157","messageId":"158","endLine":36,"endColumn":17},{"ruleId":"159","severity":1,"message":"164","line":50,"column":8,"nodeType":"161","endLine":50,"endColumn":10,"suggestions":"165"},{"ruleId":"159","severity":1,"message":"166","line":58,"column":8,"nodeType":"161","endLine":58,"endColumn":10,"suggestions":"167"},{"ruleId":"155","severity":1,"message":"163","line":53,"column":12,"nodeType":"157","messageId":"158","endLine":53,"endColumn":17},{"ruleId":"159","severity":1,"message":"166","line":66,"column":8,"nodeType":"161","endLine":66,"endColumn":10,"suggestions":"168"},{"ruleId":"159","severity":1,"message":"164","line":75,"column":8,"nodeType":"161","endLine":75,"endColumn":10,"suggestions":"169"},{"ruleId":"159","severity":1,"message":"166","line":84,"column":8,"nodeType":"161","endLine":84,"endColumn":10,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":4,"column":33,"nodeType":"173","messageId":"174","endLine":4,"endColumn":73},{"ruleId":"155","severity":1,"message":"175","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"176","line":17,"column":8,"nodeType":"161","endLine":17,"endColumn":10,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"178","line":10,"column":9,"nodeType":"157","messageId":"158","endLine":10,"endColumn":12},{"ruleId":"155","severity":1,"message":"179","line":10,"column":65,"nodeType":"157","messageId":"158","endLine":10,"endColumn":81},{"ruleId":"155","severity":1,"message":"180","line":3,"column":15,"nodeType":"157","messageId":"158","endLine":3,"endColumn":25},{"ruleId":"155","severity":1,"message":"181","line":6,"column":9,"nodeType":"157","messageId":"158","endLine":6,"endColumn":16},{"ruleId":"155","severity":1,"message":"175","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"182","line":30,"column":8,"nodeType":"161","endLine":30,"endColumn":10,"suggestions":"183"},{"ruleId":"159","severity":1,"message":"184","line":41,"column":8,"nodeType":"161","endLine":41,"endColumn":10,"suggestions":"185"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":33,"nodeType":"173","messageId":"174","endLine":2,"endColumn":73},{"ruleId":"155","severity":1,"message":"178","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":7,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":9,"column":9,"nodeType":"157","messageId":"158","endLine":9,"endColumn":19},{"ruleId":"159","severity":1,"message":"186","line":45,"column":8,"nodeType":"161","endLine":45,"endColumn":10,"suggestions":"187"},{"ruleId":"155","severity":1,"message":"188","line":8,"column":9,"nodeType":"157","messageId":"158","endLine":8,"endColumn":19},{"ruleId":"155","severity":1,"message":"189","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":16},{"ruleId":"155","severity":1,"message":"190","line":13,"column":7,"nodeType":"157","messageId":"158","endLine":13,"endColumn":15},{"ruleId":"155","severity":1,"message":"191","line":23,"column":7,"nodeType":"157","messageId":"158","endLine":23,"endColumn":17},{"ruleId":"155","severity":1,"message":"192","line":34,"column":7,"nodeType":"157","messageId":"158","endLine":34,"endColumn":20},{"ruleId":"151","replacedBy":"193"},{"ruleId":"153","replacedBy":"194"},{"ruleId":"155","severity":1,"message":"156","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":7,"endColumn":19},{"ruleId":"159","severity":1,"message":"184","line":24,"column":8,"nodeType":"161","endLine":24,"endColumn":10,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":50,"column":24,"nodeType":"198","endLine":50,"endColumn":76},{"ruleId":"196","severity":1,"message":"197","line":53,"column":24,"nodeType":"198","endLine":53,"endColumn":71},{"ruleId":"196","severity":1,"message":"197","line":56,"column":24,"nodeType":"198","endLine":56,"endColumn":76},{"ruleId":"196","severity":1,"message":"197","line":59,"column":24,"nodeType":"198","endLine":59,"endColumn":77},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"@typescript-eslint/no-unused-vars","'ViewHeader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'movie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setMovie'. Either include them or remove the dependency array.",["202"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["203"],["204"],["205"],["206"],"@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.",["207"],"'Box' is defined but never used.","'TextareaAutosize' is defined but never used.","'useHistory' is defined but never used.","'history' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["210"],"'makeStyles' is defined but never used.","'Snackbar' is defined but never used.","'required' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.",["199"],["200"],["211"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"216","fix":"218"},{"desc":"214","fix":"219"},{"desc":"216","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"225","fix":"229"},"Update the dependencies array to be: [setMovies]",{"range":"230","text":"231"},"Update the dependencies array to be: [id, setMovie]",{"range":"232","text":"233"},"Update the dependencies array to be: [id]",{"range":"234","text":"235"},{"range":"236","text":"235"},{"range":"237","text":"233"},{"range":"238","text":"235"},"Update the dependencies array to be: [history, setUser]",{"range":"239","text":"240"},"Update the dependencies array to be: [history]",{"range":"241","text":"242"},"Update the dependencies array to be: [setUser]",{"range":"243","text":"244"},"Update the dependencies array to be: [setUsers]",{"range":"245","text":"246"},{"range":"247","text":"244"},[1121,1123],"[setMovies]",[1239,1241],"[id, setMovie]",[1469,1471],"[id]",[1735,1737],[1925,1927],[2152,2154],[659,661],"[history, setUser]",[971,973],"[history]",[1312,1314],"[setUser]",[1157,1159],"[setUsers]",[741,743]]